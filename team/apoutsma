<!DOCTYPE html>
<html data-map="" xmlns="http://www.w3.org/1999/xhtml" data-mobile-support="" data-search="">
<head>
<title>Team · Arjen Poutsma</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<script src="//maps.google.com/maps/api/js?key=AIzaSyBOVeQZLTLC5_RxhGtRXOV8xqQQQcP8b9Q" type="text/javascript"></script>
<script>
        /*<![CDATA[*/
        var teamLocations = [{'latitude':51.9308,'longitude':4.4792,'memberId':13,'name':'Arjen Poutsma'}];
        /*]]>*/
    </script>

<meta property="og:title" content="Spring Team: Arjen Poutsma" />
<meta property="og:image" content="https://gravatar.com/avatar/783fefe566e832976f50aacb1b8fd949?s=250&amp;s=250" />
<meta property="og:description" content="Arjen Poutsma - Spring Technical Advisor" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link active">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div data-member-id="13">
<div class="team-map--wrapper">
<div class="team-member--container">
<section class="container-fluid">
<div class="content--title">Spring Team</div>
<div class="row-fluid">
<div class="span4 mobile-right-pane">
<img class="team-member--avatar" alt="Arjen Poutsma" src="https://gravatar.com/avatar/783fefe566e832976f50aacb1b8fd949?s=250&amp;s=250" />
</div>
<div class="span8 mobile-left-pane">
<div class="team-member-info--container">
<div class="team-member-social pull-right">
<a class="team-member--social--icon twitter-small" rel="me" href="https://twitter.com/poutsma"></a>
<a class="team-member--social--icon github-small" rel="me" href="https://github.com/poutsma"></a>
</div>
<h1 class="team-member--name">Arjen Poutsma</h1>
<div class="team-member--sub-info">
<p>Spring Technical Advisor</p>
<p>Rotterdam, the Netherlands</p>
</div>
<div class="team-member--bio"></div>
</div>
</div>
</div>
</section>
</div>
<figure id="map"></figure>
</div>
</div>
<div class="container" data-member-id="13">
<div class="main-body--wrapper">
<div class="team-members--wrapper with-padding">
<div class="row-fluid">
<div class="span8 mobile-left-pane" id="content">
<div class="content-container--wrapper blog--container">
<div class="content-container--title">Blog Posts by Arjen Poutsma</div>
<div class="content-items--container posts">
<article class="member-post--container">
<header>
<a href="/blog/2016/09/22/new-in-spring-5-functional-web-framework"><h2 class="member-post--title">New in Spring 5: Functional Web Framework</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2016-09-22 12:03:00.0">September 22, 2016</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>As mentioned yesterday in <a href="https://spring.io/blog/2016/09/21/spring-framework-5-0-m2-released">Juergen’s blog post</a>, the second milestone of Spring Framework 5.0 introduced a new functional web framework. In this post, I will give more information about the framework. </p>
<p>Keep in mind the functional web framework is built on the same reactive foundation that we provided in M1 and on which we also support annotation-based (i.e. <code>@Controller</code>, <code>@RequestMapping</code>) request handling, see the <a href="https://spring.io/blog/2016/07/28/reactive-programming-with-spring-5-0-m1">M1 blog post</a> for more on that.</p>
<h1><a href="#example" class="anchor" name="example"></a>Example</h1>
<p>We start with some excerpts from our <a href="https://github.com/poutsma/web-function-sample">sample application</a>. Below is a reactive repository that exposes <code>Person</code> objects. It is quite similar to a traditional, non-reactive repository, except that it returns <code>Flux&lt;Person&gt;</code> where you would return a <code>List&lt;Person&gt;</code> traditionally, and <code>Mono&lt;Person&gt;</code> where you would return a <code>Person</code>. <code>Mono&lt;Void&gt;</code> is used as a completion signal: to indicate when the save has been completed. For more information on these Reactor types, refer to <a href="https://spring.io/blog/2016/06/13/notes-on-reactive-programming-part-ii-writing-some-code">Dave’s blog post</a>.</p>
</section>
<a class="blog-preview--readmore" href="/blog/2016/09/22/new-in-spring-5-functional-web-framework">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2014/05/22/spring-web-services-2-2-0-released"><h2 class="member-post--title">Spring Web Services 2.2.0 Released</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category" href="/blog/category/releases">Releases</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2014-05-22 14:41:00.0">May 22, 2014</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>I’m pleased to announce that Spring Web Services 2.2.0.RELEASE has been released! This is the first release in the 2.2 release cycle. The main new feature in 2.2 is the introduction of code configuration support for Spring-WS. This means that you can now configure Spring-WS with a simple <code>@EnableWs</code> annotation. For instance:</p>
<pre><code class="prettyprint java">@Configuration
@EnableWs
@ComponentScan(basePackageClasses = { MyConfiguration.class })
public class MyWsConfiguration {

  // @Beans go here
}
</code></pre>
<p>For more information about this topic, refer to the <a href="http://static.springframework.org/spring-ws/docs/current/api/org/springframework/ws/config/annotation/EnableWs.html">javadoc of @EnableWs</a>. You can also read more about this new feature in the <a href="http://static.springframework.org/spring-ws/docs/current/reference/html/">updated reference documentation</a>. To view a complete list of changes see the <a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10060&amp;version=12850">changelog</a>.</p>
</section>
<a class="blog-preview--readmore" href="/blog/2014/05/22/spring-web-services-2-2-0-released">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2012/12/10/introducing-spring-scala"><h2 class="member-post--title">Introducing Spring Scala</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2012-12-10 13:50:00.0">December 10, 2012</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>Last October, at <a href="https://springone2gx.com/conference/washington/2012/10/session?id=27682">SpringOne2GX</a>, I introduced the Spring Scala project to the world. Since then, I’ve also presented this project at <a href="http://www.devoxx.com/display/DV12/Using+Spring+in+Scala">Devoxx</a>. In this blog post, I would like to give further details about this project and how you can use it in your Scala projects.</p>
<h2>Why Spring Scala?</h2>
<p>The goal of the Spring Scala project is simply to <strong>make it easier to use the Spring framework in Scala</strong>. We believe that there are many Spring users out there who want to try Scala out, but do not want to leave their experience with Spring behind. This project is meant for those people.</p>
</section>
<a class="blog-preview--readmore" href="/blog/2012/12/10/introducing-spring-scala">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2011/01/11/spring-web-services-2-0-released"><h2 class="member-post--title">Spring Web Services 2.0 Released</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2011-01-11 13:55:00.0">January 11, 2011</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>After being in the works for almost a year, I’m happy to announce that Spring Web Services 2.0 has been released! In this post, I’d like to go over some of the major new features.</p>
<h2>Java 5+ and Spring 3.0 Required</h2>
<p>As you are probably aware, we moved the Object XML Mapping (OXM) module from the Spring-WS project into Spring 3.0. As such, it was a bit problematic to use Spring-WS 1.5 (with its own OXM module) with Spring 3.0, due to conflicting classes in the org.springframework.oxm package.</p>
<p>As of version 2.0, we no longer ship the OXM module as part of Spring-WS, but depend on Spring’s OXM instead. As a result, <strong>Spring Web Services 2.0 requires Spring 3.0</strong> to work. Normally, we tend to be a bit more lenient with regard to version requirements, not necessarily requiring the latest Spring version, but this was the only way to make things work.</p>
</section>
<a class="blog-preview--readmore" href="/blog/2011/01/11/spring-web-services-2-0-released">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2009/03/27/rest-in-spring-3-resttemplate"><h2 class="member-post--title">REST in Spring 3: RestTemplate</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2009-03-27 12:39:00.0">March 27, 2009</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>In an earlier <a href="http://blog.springsource.com/2009/03/08/rest-in-spring-3-mvc/">post</a>, I blogged about the REST capabilities we added to Spring @MVC version 3.0. Later, Alef <a href="http://blog.springsource.com/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/">wrote</a> about using the introduced functionality to add an Atom view to the Pet Clinic application. In this post, I would like to introduce the client-side capabilities we added in Milestone 2.</p>
<h2>RestTemplate</h2>
<p>The <a href="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/client/RestTemplate.html"><tt>RestTemplate</tt></a> is the central Spring class for client-side HTTP access. Conceptually, it is very similar to the <a href="http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/jdbc/core/JdbcTemplate.html"><tt>JdbcTemplate</tt></a>, <a href="http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/jms/core/JmsTemplate.html"><tt>JmsTemplate</tt></a>, and the various other templates found in the Spring Framework and other portfolio projects. This means, for instance, that the RestTemplate is thread-safe once constructed, and that you can use callbacks to customize its operations.</p>
</section>
<a class="blog-preview--readmore" href="/blog/2009/03/27/rest-in-spring-3-resttemplate">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2009/03/08/rest-in-spring-3-mvc"><h2 class="member-post--title">REST in Spring 3: @MVC</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2009-03-08 22:20:00.0">March 8, 2009</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>In the last couple of years, REST has emerged as a compelling alternative to SOAP/WSDL/WS-*-based distributed architectures. So when we started to plan our work on the next major release of Spring - version 3.0, it was quite clear to us that we had to focus on making the development of ‘RESTful’ Web services and applications easier. Now, what is and isn’t ‘RESTful’ could be the topic of a whole new post all together; in this post I’ll take a more practical approach, and focus on the features that we added to the @Controller model of Spring MVC.<br></p>
</section>
<a class="blog-preview--readmore" href="/blog/2009/03/08/rest-in-spring-3-mvc">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2008/05/04/spring-web-services-1-5-1-released"><h2 class="member-post--title">Spring Web Services 1.5.1 Released</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category" href="/blog/category/releases">Releases</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2008-05-04 12:51:00.0">May 4, 2008</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>Dear Spring community,</p>
<p></p>
<p>I’m pleased to announce that Spring Web Services 1.5.1 has been released!</p>
<p><a href="https://sourceforge.net/project/showfiles.php?group_id=73357&amp;package_id=178569&amp;release_id=596930" target="_blank">Downloads</a> | <a href="http://static.springframework.org/spring-ws/site/" target="_blank">Site</a> | <a href="http://static.springframework.org/spring-ws/docs/1.5.1/changelog.txt" target="_blank">Changelog</a> | <a href="http://forum.springframework.org/showthread.php?t=53701" target="_blank">Announcement</a><br> </p>
<br>
<p>This is the first bug fix and enhancement release in the Spring-WS 1.5 series. It fixes all bugs reported since 1.5.0 and introduces various enhancements throughout the framework:</p>
<ul>
<li>Introduced a Spring JMS MessageConverter that uses OXM marshallers</li>
<li>Introduced a Spring MVC View that uses OXM marshallers</li>
<li>Fixed WS-Security signatures when using WSS4J in combination with SAAJ messages</li>
<li>Support for timeouts on HTTP transports</li>
<li>Support for Castor 1.2, see note below</li>
<li>Airline sample now uses Spring Security</li>
</ul>
</section>
<a class="blog-preview--readmore" href="/blog/2008/05/04/spring-web-services-1-5-1-released">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2008/03/29/what-s-new-in-spring-web-services-1-5"><h2 class="member-post--title">What&#39;s New in Spring Web Services 1.5?</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category" href="/blog/category/engineering">Engineering</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2008-03-29 00:37:00.0">March 29, 2008</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>After being in the works for about six months, I’m happy to announce that Spring Web Services 1.5.0 has been released! In this post, I’d like to go over some of the major new features.</p>
<h2>New Transports</h2>
<p>The 1.5 release includes two new transports: JMS and email. Using these new transports requires no Java code changes: just add a bit of configuration, and you’re off! The JMS transport integrates nicely with Spring 2’s <a href="http://static.springframework.org/spring/docs/2.5.x/reference/jms.html#jms-receiving">Message-Driven POJO</a> model, as indicated by the following piece of configuration taken from the airline sample application:</p>
</section>
<a class="blog-preview--readmore" href="/blog/2008/03/29/what-s-new-in-spring-web-services-1-5">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2008/03/28/spring-web-services-1-5-0-final-released"><h2 class="member-post--title">Spring Web Services 1.5.0 Final Released</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category" href="/blog/category/releases">Releases</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2008-03-28 22:19:00.0">March 28, 2008</time>
</div>
</div>
</header>
<section class="member-post--summary"><p></p>
<p>Dear Spring community,<br>I’m pleased to announce that Spring Web Services 1.5.0 has been released!</p>
<p><a href="https://sourceforge.net/project/showfiles.php?group_id=73357&amp;package_id=178569&amp;release_id=587838" target="_blank">Downloads</a> | <a href="http://static.springframework.org/spring-ws/site/" target="_blank">Site</a> | <a href="http://static.springframework.org/spring-ws/docs/1.5.0/changelog.txt" target="_blank">Changelog</a> | <a href="http://forum.springframework.org/showthread.php?t=51796" target="_blank">Announcement</a><br> </p>
<p>This final release candidate the following new features over 1.0.3:</p>
<ul>
<li>Two new transports: JMS and email, both for client and server, <br></li>
<li>WSS4J-based WS-Security implementation, which allows for WS-Security on non-SUN JDKs (i.e. WebSphere) and JDK 1.4,</li>
<li>WS-Addressing support for both client and server, supporting the August 2004 and final versions of the specification, <br></li>
<li>Native support for Java 6, including JAXP 1.4, and the bundled SAAJ 1.3 and JAXB 2.0, <br></li>
<li>Two new Spring namespaces, which drastically decrease the amount of XML required to configure marshallers and typical Spring-WS constructs, <br></li>
<li>Spring-WS jars are now OSGi bundles, <br></li>
<li>A new, client-side interception mechanism, including WS-Security support, <br></li>
<li>@Endpoints are now @Components, so they are automatically picked up when using Spring 2.5 component scanning</li>
<li>A new and improved XSD-to-WSDL generator that inlines included and imported XSDs</li>
<li>Support for Spring Security</li>
<li>Support for the Java 6 HTTP Server</li>
<li>Two new samples, showing Plain Old XML usage and WS-Addressing with the Java 6 HTTP server</li>
</ul>
</section>
<a class="blog-preview--readmore" href="/blog/2008/03/28/spring-web-services-1-5-0-final-released">
Read more...
</a>
</article>
<article class="member-post--container">
<header>
<a href="/blog/2007/12/08/spring-web-services-1-5-0-m1-released"><h2 class="member-post--title">Spring Web Services 1.5.0 M1 released</h2></a>
<div class="meta-data--container">
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category" href="/blog/category/releases">Releases</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2007-12-08 03:36:00.0">December 8, 2007</time>
</div>
</div>
</header>
<section class="member-post--summary"><p>Dear Spring community,<br> I'm pleased to announce that Spring Web Services 1.5.0 M1 has been released. </p>
<p></p>
<p align="center"><br><a target="_blank" href="https://sourceforge.net/project/showfiles.php?group_id=73357&amp;package_id=178569&amp;release_id=560091"> <img border="0" align="middle" title="Spring-WS Logo" alt="Spring-WS Logo" src="http://static.springframework.org/spring-ws/sites/1.5/images/spring-ws-logo.png"> </a> </p>
<p align="center"> <a target="_blank" href="https://sourceforge.net/project/showfiles.php?group_id=73357&amp;package_id=178569&amp;release_id=560091">Download</a> | <a target="_blank" href="http://static.springframework.org/spring-ws/sites/1.5/reference/html/index.html">Reference documentation</a> | <a href="http://static.springframework.org/spring-ws/sites/1.5/apidocs/index.html">API documentation</a> </p>
<p></p>
<p></p>
<p>This milestone release introduces:</p>
<ul>
<li>JMS transport support, for both client- and server-side </li>
<li>Email transport support, also for both client and server </li>
<li>Two new Spring namespaces, which drastically decrease the amount of XML to configure marshallers and typical Spring-WS constructs </li>
<li>SOAP 1.2 Compatible WSDL descriptor generation </li>
<li>Spring-WS jars are now OSGi bundles </li>
</ul>
</section>
<a class="blog-preview--readmore" href="/blog/2007/12/08/spring-web-services-1-5-0-m1-released">
Read more...
</a>
</article>
</div>
</div>
</div>
<aside class="span4 mobile-left-pane">
<div class="member-twitter--wrapper">
<div class="member-twitter--header">
<div class="twitter-handle">@poutsma</div>
<a class="twitter-follow-btn" href="https://twitter.com/intent/user?screen_name=poutsma">
<i class="icon-twitter"></i>
Follow
</a>
</div>
<div class="member-twitter--body">
<div>
<a class="twitter-timeline" data-border-color="#ffffff" data-chrome="nofooter transparent noheader noscrollbar" data-show-replies="false" data-widget-id="366969513482285056" width="250" data-screen-name="poutsma" href="https://twitter.com/poutsma"></a>
</div>
<script>
                  !function(d,s,id){
                    var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';
                    if(!d.getElementById(id)){
                      js=d.createElement(s);
                      js.id=id;
                      js.src=p+"://platform.twitter.com/widgets.js";
                      fjs.parentNode.insertBefore(js,fjs);
                    }}(document,"script","twitter-wjs");
                </script>
</div>
</div>
</aside>
</div>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>