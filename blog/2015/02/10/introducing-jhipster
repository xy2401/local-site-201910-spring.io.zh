<!DOCTYPE html>
<html data-code-prettify="" data-mobile-support="" data-search="">
<head>
<title>Introducing JHipster</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<link href="/css/blog-92993c3ec6808bded45b277c18d7d621.css" rel="stylesheet" type="text/css" />

<meta content="summary" name="twitter:card" />
<meta content="@springcentral" name="twitter:site" />
<meta name="twitter:title" content="Introducing JHipster" />
<meta name="twitter:description" content="&lt;blockquote&gt;
 &lt;p&gt;This post is a guest post by community &lt;a href=&quot;http://twitter.com/juliendubois&quot;&gt;member Julien Dubois (@juliendubois)&lt;/a&gt;, a former SpringSource employee who now works for Ippon Technologies and is creator of the JHipster project. Thanks Julien! I’d like to see more of these guest posts, so - as usual - don’t hesitate to &lt;a href=&quot;http://twitter.com/starbuxman&quot;&gt;ping me (@starbuxman)&lt;/a&gt;! -Josh&lt;/p&gt; 
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://jhipster.github.io/images/logo-jhipster-drink-coffee.png&quot; alt=&quot;the JHipster&quot; title=&quot;the JHipster&quot; &quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#introduction&quot; class=&quot;anchor&quot; name=&quot;introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;JHipster, or “Java Hipster,” is a handy application generator that will create for you a Spring Boot (that’s the Java part) and AngularJS (that’s the &lt;em&gt;hipster&lt;/em&gt; part) application.&lt;/p&gt;
&lt;p&gt;In a very short amount of time, &lt;a href=&quot;https://github.com/jhipster/generator-jhipster&quot;&gt;JHipster has became very popular on Github&lt;/a&gt;, and it has been featured on online magazines - like &lt;a href=&quot;http://www.infoq.com/news/2015/01/jhipster-2.0&quot;&gt;InfoQ&lt;/a&gt;, Infoworld or SD Times - and in conferences all over the world - Paris, London, Montreal, Omaha, Taipei, Richmond, Frankfurt!&lt;/p&gt;
" />
<meta name="twitter:creator" content="@starbuxman" />
<meta name="twitter:image:src" content="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=200" />

<meta property="og:title" content="Introducing JHipster" />
<meta property="og:image" content="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=200" />
<meta property="og:description" content="&lt;blockquote&gt;
 &lt;p&gt;This post is a guest post by community &lt;a href=&quot;http://twitter.com/juliendubois&quot;&gt;member Julien Dubois (@juliendubois)&lt;/a&gt;, a former SpringSource employee who now works for Ippon Technologies and is creator of the JHipster project. Thanks Julien! I’d like to see more of these guest posts, so - as usual - don’t hesitate to &lt;a href=&quot;http://twitter.com/starbuxman&quot;&gt;ping me (@starbuxman)&lt;/a&gt;! -Josh&lt;/p&gt; 
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://jhipster.github.io/images/logo-jhipster-drink-coffee.png&quot; alt=&quot;the JHipster&quot; title=&quot;the JHipster&quot; &quot;&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#introduction&quot; class=&quot;anchor&quot; name=&quot;introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;JHipster, or “Java Hipster,” is a handy application generator that will create for you a Spring Boot (that’s the Java part) and AngularJS (that’s the &lt;em&gt;hipster&lt;/em&gt; part) application.&lt;/p&gt;
&lt;p&gt;In a very short amount of time, &lt;a href=&quot;https://github.com/jhipster/generator-jhipster&quot;&gt;JHipster has became very popular on Github&lt;/a&gt;, and it has been featured on online magazines - like &lt;a href=&quot;http://www.infoq.com/news/2015/01/jhipster-2.0&quot;&gt;InfoQ&lt;/a&gt;, Infoworld or SD Times - and in conferences all over the world - Paris, London, Montreal, Omaha, Taipei, Richmond, Frankfurt!&lt;/p&gt;
" />
<meta content="article" property="og:type" />
<meta property="og:article:published_time" content="2015-02-10 00:11:00.0" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link active">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link active">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div></div>
<div class="container-fluid">
<div class="main-body--wrapper">
<div class="row-fluid blog--wrapper">
<article class="span8 mobile-left-pane" id="content">
<header class="desktop-only">
<div class="blog-category active content--title">
<div>Engineering</div>
</div>
<div class="blog-category content--title">
<div>Releases</div>
</div>
<div class="blog-category content--title">
<div>News and Events</div>
</div>
</header>
<div class="blog--container">
<header>
<h1 class="blog--title">Introducing JHipster</h1>
<div class="meta-data--container">
<div class="meta-data--item desktop-only">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category">Engineering</a>
</div>
<div class="meta-data--item">
<img class="meta-data--icon" src="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=20&amp;d=mm" />
<a class="author" rel="author" href="/team/jlong">Josh Long</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2015-02-10 00:11:00.0">February 10, 2015</time>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon comments"></div>
<a class="comments" data-disqus-identifier="1967" href="/blog/2015/02/10/introducing-jhipster#disqus_thread">
</a></div>
</div>
</header>
<div class="blog--post"><blockquote><p>This post is a guest post by community <a href="https://twitter.com/juliendubois">member Julien Dubois (@juliendubois)</a>, a former SpringSource employee who now works for Ippon Technologies and is creator of the JHipster project. Thanks Julien! I&rsquo;d like to see more of these guest posts, so - as usual - don&rsquo;t hesitate to <a href="https://twitter.com/starbuxman">ping me (@starbuxman)</a>! -Josh</p>
</blockquote>
<hr /><p><img src="https://jhipster.github.io/images/logo-jhipster-drink-coffee.png" alt="the JHipster" title="the JHipster" " /></p><h2><a href="#introduction" class="anchor" name="introduction"></a>Introduction</h2><p>JHipster, or &ldquo;Java Hipster,&rdquo; is a handy application generator that will create for you a Spring Boot (that&rsquo;s the Java part) and AngularJS (that&rsquo;s the <em>hipster</em> part) application.</p><p>In a very short amount of time, <a href="https://github.com/jhipster/generator-jhipster">JHipster has became very popular on Github</a>, and it has been featured on online magazines - like <a href="http://www.infoq.com/news/2015/01/jhipster-2.0">InfoQ</a>, Infoworld or SD Times - and in conferences all over the world - Paris, London, Montreal, Omaha, Taipei, Richmond, Frankfurt!</p><p>JHipster focuses on generating a high quality application with a Java back-end using an extensive set of Spring technologies; <a href="https://spring.io/projects/spring-boot">Spring Boot</a>, <a href="https://spring.io/projects/spring-security">Spring Security</a>, <a href="https://spring.io/projects/spring-data">Spring Data</a>, Spring MVC (providing a framework for websockets, REST and MVC), etc. an Angular.js front-end and a suite of pre-configured development tools like <a href="http://yeoman.io/">Yeoman</a>, <a href="https://maven.apache.org/">Maven</a>, <a href="https://gradle.org/">Gradle</a>, <a href="https://gruntjs.com/">Grunt</a>, <a href="http://gulpjs.com/">Gulp.js</a> and <a href="https://bower.io/">Bower</a>. JHipster creates a fully configured Spring Boot application with a set of pre-defined screens for user management, monitoring, and logging. The generated Spring Boot application is specifically tailored to make working with Angular.js a smoother experience.</p><p>JHipster gives you the tools to update, manage and package the resulting application. Run <code>mvn package -Pprod</code> to trigger a Maven build that uses the Spring Boot Maven plugin to create a single executable <code>.war</code> file, and Grunt or Gulp.js tasks to test, minify and optimize JavaScript, HTML and CSS code.</p><h2><a href="#getting-started" class="anchor" name="getting-started"></a>Getting Started</h2><p>JHipster uses Node.js and Yeoman to generate the application and Java and Maven (or Gradle) to run the generated application. You can find an updated getting-started guide in <a href="https://jhipster.github.io/installation.html">the online documentation</a>.</p><p>Check out the following video to learn how to create a JHipster application and use the provided set of tools to modify and improve the generated code.</p><p><iframe width="560" height="315" src="https://www.youtube.com/embed/fbEnchNPHSc" frameborder="0" allowfullscreen></iframe></p><h2><a href="#a-walkthrough-of-the-generated-spring-boot-application" class="anchor" name="a-walkthrough-of-the-generated-spring-boot-application"></a>A Walkthrough of the Generated Spring Boot Application</h2><p>The generated application can be quite different depending on the options you have selected when you created it. For example, if you selected <code>MongoDB</code> instead of <code>MySQL</code>, your Spring Data repositories will be different. If you selected &ldquo;Java 8&rdquo; instead of <code>Java 7</code>, you will have lambda expressions in the generated code. Whatever you choose, the resulting application will share a similar architecture and fundamental code-base.</p><p>Let&rsquo;s look at some of the key features of the resulting application:</p>
<ul>
<li><code>src/main/java</code> directory has Spring Boot configuration classes in the <code>config</code> package. JHipster uses Spring&rsquo;s Java configuration and has no XML configuration.</li>
<li>JPA entity or MongoDB document classes in the <code>domain</code> package. The JPA entities are configured with cache and auto-generated primary keys. If you use JHipster to generate your JPA entities, it is able to create one-to-many and many-to-many relationships.</li>
<li>(Small) Spring Data repositories in the <code>repository</code> package.</li>
<li>Optionally, you can have regular <code>@Service</code>-beans in the <code>service</code> layer. These services are typically transactional and secured business objects.</li>
<li>REST endpoints live in the <code>web.rest</code> package, created with Spring MVC&rsquo;s REST support.</li>
<li>JHipster also generates Liquibase changelog files to handle database updates. Adding a new entity will create a specific schema update, which will be versioned, and will be executed when the application is restarted.</li>
<li>Integration tests using Spring&rsquo;s Test Context support.</li>
<li>JHipster creates a fully usable AngularJS front-end on top of this Spring application, with CRUD screens to manage your generated entities.</li>
</ul><h2><a href="#developing-with-jhipster" class="anchor" name="developing-with-jhipster"></a>Developing with JHipster</h2><p>JHipster is a great application starter, but once you have generated your application and added some CRUD Angular.JS screens on top of your JPA entities, you will need to get coding.</p><p>JHipster projects are ultimately just simple Spring Boot-based Maven and Gradle-based projects that can be imported into any IDE that knows about Maven (or Gradle) and Java.</p><p>JHipster gives you command-line tools to build and update your application. Grunt or Gulp.js help you build your front-end. For example, running <code>grunt serve</code> will launch a browser that is managed by Grunt, that will be automatically reloaded when any of your HTML, JavaScript, or CSS code change. Bower allows you to upgrade or install JavaScript or CSS libraries. For example, running <code>bower install ng-table</code> will install <code>ng-table</code>.</p><p>You can run your Spring Boot application from the command line using the Spring Boot Maven plugin (or Gradle plugin): <code>mvn spring-boot:run</code>. You can use the Maven Liquibase <code>diff</code> goal to automatically generate a Liquibase changelog. Run <code>mvn liquibase:diff</code> will check your existing database schema against your current (modified) JPA code and generate the necessary Liquibase changelog file in order to update your database schema automatically.</p><p>You can use Docker to set up your development box. This can be easier for some advanced users (especially Linux users), and will allow you to have a consistent working environment if you have a team of developers. A specific <code>jhipster-docker</code> project has been created for this. Check out <a href="https://jhipster.github.io/installation.html">the JHipster documentation page on installation for more details</a>.</p><h2><a href="#managing-the-application-in-production" class="anchor" name="managing-the-application-in-production"></a>Managing the Application in Production</h2><p>JHipster applications have a configured-by-default <code>admin</code> user that has access to several <em>administration</em>-specific screens. The three most interesting screens are the API screen (generated with Swagger), the metrics screen, and the logging screen. The <strong>API screen</strong> documents the REST API of your Spring Boot application and simplifies working with front-end developers using Angular.JS. The <strong>metrics screen</strong> uses Dropwizard Metrics and gives you detailed information on your application&rsquo;s performance, including the performance of your Spring bean&rsquo;s methods. The <strong>logging screen</strong> uses Logback and allows you to change your logging levels at runtime. You could, for example, change the logging level of Spring Security in order to have detailed information on your security configuration.</p><p>JHipster has a <code>development</code> and a <code>production</code> mode. The <code>production</code> mode gives you a minified and optimized front-end, GZip compression, HTTP caching and more. In order to test the <code>production</code> mode, run your application with the <code>prod</code> profile (available both with Maven or Gradle): <code>mvn spring-boot:run -Pprod</code>. Using the Chrome Developer Tools, you can run an audit of your generated application to check performance.</p><h2><a href="#deploying-to-cloud-foundry" class="anchor" name="deploying-to-cloud-foundry"></a>Deploying to Cloud Foundry</h2><p>JHipster has a Cloud Foundry <code>sub generator</code> that makes it easy to deploy application to Cloud Foundry: <code>yo jhipster:cloudfoundry</code>. This adds a Cloud Foundry application, creates a database (MySQL, PostgreSQL and MongoDB are supported) and then binds the database to the application and uploads (<code>cf push</code>) your application to Cloud Foundry.</p><h2><a href="#next-steps" class="anchor" name="next-steps"></a>Next Steps</h2><p>JHipster takes you further with fewer steps. If you want to learn more, check out the <a href="https://jhipster.github.io/">JHipster site</a>, the <a href="https://github.com/jhipster/generator-jhipster">JHipster Github page</a> and <a href="https://twitter.com/java_hipster">follow @java_hipster on Twitter</a>.</p></div>
</div>
<section id="disqus_thread"></section>
<script type="text/javascript">
      var disqus_shortname = 'spring-io';
      var disqus_identifier = 1967;

      (function(disqus_shortname, document) {
        injectScript('//' + disqus_shortname + '.disqus.com/embed.js');
        injectScript('//' + disqus_shortname + '.disqus.com/count.js');

        function injectScript(url) {
          var s = document.createElement('script');
          s.async = true;
          s.src = url;
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
        }

      }(disqus_shortname, document));
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a class="dsq-brlink" href="https://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="mobile-only">
<p><a href="/blog">
<i class="icon-chevron-left"></i>
Back
</a></p>
</div>
</article>
<aside class="span4 mobile-right-pane" id="sidebar">
<div>
<ul class="right-pane-widget--container secondary-nav with-icon">
<li class="blog-category">
<div class="icon blog-icon all-posts"></div>
<a href="/blog">All Posts</a>
<a class="pull-right" href="/blog.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category active">
<div class="icon blog-icon engineering"></div>
<a href="/blog/category/engineering">Engineering</a>
<a class="pull-right" href="/blog/category/engineering.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon releases"></div>
<a href="/blog/category/releases">Releases</a>
<a class="pull-right" href="/blog/category/releases.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon news-and-events"></div>
<a href="/blog/category/news">News and Events</a>
<a class="pull-right" href="/blog/category/news.atom"><i class="icon-rss"></i></a>
</li>
</ul>
<ul class="social-btn--container">
<a class="social-btn twitter" href="https://twitter.com/springcentral"></a>

<a class="social-btn linkedin" href="https://www.linkedin.com/groups/46964"></a>
<a class="social-btn youtube" href="/videos"></a>
</ul>
<div id="blog-sidebar-newsletter">
<p>Get updates from The Spring Team delivered to your inbox</p>
<script src="https://app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_4723"></form>
<script>
        MktoForms2.loadForm("https://app-sj05.marketo.com", "625-IUJ-009", 4723, function(form){
          form.onSuccess(function(values, followUpUrl) {
            form.getFormElem().html("<p>Thank you!</p>");
            return false;
          });
        });
      </script>
</div>
</div>
</aside>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>