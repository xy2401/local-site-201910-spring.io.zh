<!DOCTYPE html>
<html data-code-prettify="" data-mobile-support="" data-search="">
<head>
<title>Spring Integration Java DSL 1.0 RC1 Released</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<link href="/css/blog-92993c3ec6808bded45b277c18d7d621.css" rel="stylesheet" type="text/css" />

<meta content="summary" name="twitter:card" />
<meta content="@springcentral" name="twitter:site" />
<meta name="twitter:title" content="Spring Integration Java DSL 1.0 RC1 Released" />
<meta name="twitter:description" content="&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;We are pleased to announce that soon after the&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2014/10/27/spring-integration-4-1-rc1-released&quot;&gt;Spring Integration 4.1 Release Candidate&lt;/a&gt;&lt;br&gt;the Spring Integration Java DSL 1.0 Release Candidate is now available.&lt;br&gt;Please use the &lt;a href=&quot;http://repo.springsource.org/milestone&quot;&gt;Milestone Repository&lt;/a&gt; with Maven or Gradle,&lt;br&gt;or download a&lt;br&gt;&lt;a href=&quot;http://repo.spring.io/milestone/org/springframework/integration/spring-integration-java-dsl/1.0.0.RC1&quot;&gt;distribution archive&lt;/a&gt;,&lt;br&gt;to give it a spin.&lt;/p&gt;
&lt;p&gt;See the project &lt;a href=&quot;https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference&quot;&gt;home page&lt;/a&gt;&lt;br&gt;for more information.&lt;/p&gt;
&lt;p&gt;The release includes many new features and improvements, as well as a number of bug fixes. The GA release&lt;br&gt;is planned for the middle of November.&lt;/p&gt;
&lt;p&gt;Here is a summary of major changes since the&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2014/09/07/spring-integration-java-dsl-1-0-milestone-3-available&quot;&gt;last milestone&lt;/a&gt;:&lt;/p&gt;
" />
<meta name="twitter:creator" content="@artem_bilan" />
<meta name="twitter:image:src" content="https://gravatar.com/avatar/2158ce6e7c048277890eb64458864c1c?s=200" />

<meta property="og:title" content="Spring Integration Java DSL 1.0 RC1 Released" />
<meta property="og:image" content="https://gravatar.com/avatar/2158ce6e7c048277890eb64458864c1c?s=200" />
<meta property="og:description" content="&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;We are pleased to announce that soon after the&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2014/10/27/spring-integration-4-1-rc1-released&quot;&gt;Spring Integration 4.1 Release Candidate&lt;/a&gt;&lt;br&gt;the Spring Integration Java DSL 1.0 Release Candidate is now available.&lt;br&gt;Please use the &lt;a href=&quot;http://repo.springsource.org/milestone&quot;&gt;Milestone Repository&lt;/a&gt; with Maven or Gradle,&lt;br&gt;or download a&lt;br&gt;&lt;a href=&quot;http://repo.spring.io/milestone/org/springframework/integration/spring-integration-java-dsl/1.0.0.RC1&quot;&gt;distribution archive&lt;/a&gt;,&lt;br&gt;to give it a spin.&lt;/p&gt;
&lt;p&gt;See the project &lt;a href=&quot;https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference&quot;&gt;home page&lt;/a&gt;&lt;br&gt;for more information.&lt;/p&gt;
&lt;p&gt;The release includes many new features and improvements, as well as a number of bug fixes. The GA release&lt;br&gt;is planned for the middle of November.&lt;/p&gt;
&lt;p&gt;Here is a summary of major changes since the&lt;br&gt;&lt;a href=&quot;https://spring.io/blog/2014/09/07/spring-integration-java-dsl-1-0-milestone-3-available&quot;&gt;last milestone&lt;/a&gt;:&lt;/p&gt;
" />
<meta content="article" property="og:type" />
<meta property="og:article:published_time" content="2014-10-31 19:33:14.444" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link active">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link active">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div></div>
<div class="container-fluid">
<div class="main-body--wrapper">
<div class="row-fluid blog--wrapper">
<article class="span8 mobile-left-pane" id="content">
<header class="desktop-only">
<div class="blog-category content--title">
<div>Engineering</div>
</div>
<div class="blog-category active content--title">
<div>Releases</div>
</div>
<div class="blog-category content--title">
<div>News and Events</div>
</div>
</header>
<div class="blog--container">
<header>
<h1 class="blog--title">Spring Integration Java DSL 1.0 RC1 Released</h1>
<div class="meta-data--container">
<div class="meta-data--item desktop-only">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category">Releases</a>
</div>
<div class="meta-data--item">
<img class="meta-data--icon" src="https://gravatar.com/avatar/2158ce6e7c048277890eb64458864c1c?s=20&amp;d=mm" />
<a class="author" rel="author" href="/team/artembilan">Artem Bilan</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2014-10-31 19:33:14.444">October 31, 2014</time>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon comments"></div>
<a class="comments" data-disqus-identifier="1805" href="/blog/2014/10/31/spring-integration-java-dsl-1-0-rc1-released#disqus_thread">
</a></div>
</div>
</header>
<div class="blog--post"><p>Dear Spring community,</p><p>We are pleased to announce that soon after the<br /><a href="https://spring.io/blog/2014/10/27/spring-integration-4-1-rc1-released">Spring Integration 4.1 Release Candidate</a><br />the Spring Integration Java DSL 1.0 Release Candidate is now available.<br />Please use the <a href="http://repo.springsource.org/milestone">Milestone Repository</a> with Maven or Gradle,<br />or download a<br /><a href="https://repo.spring.io/milestone/org/springframework/integration/spring-integration-java-dsl/1.0.0.RC1">distribution archive</a>,<br />to give it a spin.</p><p>See the project <a href="https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference">home page</a><br />for more information.</p><p>The release includes many new features and improvements, as well as a number of bug fixes. The GA release<br />is planned for the middle of November.</p><p>Here is a summary of major changes since the<br /><a href="https://spring.io/blog/2014/09/07/spring-integration-java-dsl-1-0-milestone-3-available">last milestone</a>:</p><p><strong>Refactoring and Breaking Changes</strong></p><p>While still supporting earlier Java versions, the Spring Integration Java DSL is primarily positioned for Java 8 and its Lambda support.<br />We have removed several<br /><code>functional interfaces</code> in favor of similar interfaces from Java 8: <code>Consumer&lt;T&gt;</code>, <code>Function&lt;T, R&gt;</code> etc. Of course, to support<br />backward compatibility with older Java version we have implemented similar interfaces in the DSL source code. Users that<br />are using the changed interfaces with with Java versions less than 8 will need to make changes to fix their compilation errors. For example:</p><p>From this:</p>
<pre><code class="prettyprint java">.handle(Integer.class, (p, h) -&gt; p * 2,
		new EndpointConfigurer&lt;GenericEndpointSpec&lt;ServiceActivatingHandler&gt;&gt;() {
				@Override
				public void accept(GenericEndpointSpec&lt;ServiceActivatingHandler&gt; spec) {
					spec.poller(Pollers.cron(&quot;7 * * * * ?&quot;));
				}
		})
</code></pre><p>To this:<br /><code>java
.handle(Integer.class, (p, h) -&gt; p * 2,
new Consumer&lt;GenericEndpointSpec&lt;ServiceActivatingHandler&gt;&gt;() {
@Override
public void accept(GenericEndpointSpec&lt;ServiceActivatingHandler&gt; spec) {
spec.poller(Pollers.cron(&quot;7 * * * * ?&quot;));
}
})
</code><br />Of course if you use a Java 8 Lambda here, the code will not require changes:</p>
<pre><code class="prettyprint java">.handle(Integer.class, (p, h) -&gt; p * 2, e -&gt; e.poller(Pollers.cron(&quot;7 * * * * ?&quot;)))
</code></pre><p>The <code>IntegrationFlows</code> now contains only <code>from(...)</code> methods. the <code>.fromFixedMessageChannel()</code> has been replaced with<br /><code>.from(String messageChannelName, boolean fixedSubscriber)</code>.</p><p>In addition, to fix some package tangle issues, we have moved some classes to different packages.</p><p><strong>Method Scope Functions</strong></p><p>To simplify the code completion from an IDE and allow avoiding redundant searches for a desired <code>Namespace Factory</code> we<br />added overloaded methods with <code>Function&lt;T, R&gt;</code> argument. For example these code snippets are equal:<br /><code>java
.....
.channel(Amqp.pollableChannel(this.rabbitConnectionFactory)
.queueName(&quot;amqpReplyChannel&quot;)
.channelTransacted(true))
....
.channel(c -&gt; c.amqpPollable(this.rabbitConnectionFactory)
.queueName(&quot;amqpReplyChannel&quot;)
.channelTransacted(true))
....
</code><br />Where the <code>c</code> variable is the <code>Channel</code>&rsquo;s &ldquo;method-aggregator&rdquo; object, which delegates to the appropriate <code>Namespace Factory</code>.<br />Other similar Lambda methods are:</p>
<ul>
<li><code>IntegrationFlows.from(MessageSourcesFunction sources)</code></li>
<li><code>IntegrationFlows.from(MessageProducersFunction producers)</code></li>
<li><code>IntegrationFlows.from(MessagingGatewaysFunction gateways)</code></li>
<li><code>IntegrationFlowDefinition.handleWithAdapter(Function&lt;Adapters, MessageHandlerSpec&lt;?, H&gt;&gt; adapters)</code></li>
<li><code>EndpointSpec.poller(Function&lt;PollerFactory, PollerSpec&gt; pollers)</code></li>
</ul><p><strong>FunctionExpression</strong></p><p>Spring Integration has amazing Spring Expression Language (SpEL) support. Since the Java DSL is<br />pure (eh!) Java, it does not really make sense to specify some business logic in a long String for an <code>expression</code> property.<br />Being inspired by Java 8 Lambda support, and pursuing the aim of minimal changes<br />we have introduced the <code>FunctionExpression</code> - an implementation of the SpEL <code>Expression</code> interface - which accepts a<br /><code>Function&lt;T, R&gt;</code> and delegates to it on the each <code>getValue()</code>. Now, many components in the DSL provide<br /><code>(Function&lt;T, R&gt; function)</code> methods as an alternative to the similar SpEL method. Here is an example for the <code>localFilename</code><br />property for the <code>FtpInboundFileSynchronizingMessageSource</code>:</p><p>With SpEL:<br /><code>java
@Bean
public IntegrationFlow ftpInboundFlow() {
return IntegrationFlows
.from(s -&gt; s.ftp(this.ftpSessionFactory)
.remoteDirectory(&quot;ftpSource&quot;)
.localFilenameExpression(&quot;payload.toUpperCase() + &#39;.a&#39;&quot;)
.channel(c -&gt; c.queue(&quot;ftpInboundResultChannel&quot;))
.get();
}
</code></p><p>With Lambda:<br /><code>java
@Bean
public IntegrationFlow ftpInboundFlow() {
return IntegrationFlows
.from(s -&gt; s.ftp(this.ftpSessionFactory)
.remoteDirectory(&quot;ftpSource&quot;)
.localFilename(f -&gt; f.toUpperCase() + &quot;.a&quot;)))
.channel(c -&gt; c.queue(&quot;ftpInboundResultChannel&quot;))
.get();
}
</code><br />Other interesting uses of the <code>FunctionExpression</code> are the <code>Enricher</code> and <code>HeaderEnricher</code>:<br /><code>java
.enrich(e -&gt; e.requestChannel(&quot;enrichChannel&quot;)
.requestPayload(Message::getPayload)
.propertyFunction(&quot;date&quot;, m -&gt; new Date()))
</code></p><p>The <code>FunctionExpression</code> also supports runtime type conversion as is done in the standard <code>SpelExpression</code>.</p><p><strong>SubFlows</strong></p><p>We have introduced <code>SubFlow</code> support for some <code>if...else</code> and <code>publish-subscribe</code> components. The simplest<br />example is <code>.publishSubscribeChannel()</code>:<br /><code>java
@Bean
public IntegrationFlow subscribersFlow() {
return flow -&gt; flow
.publishSubscribeChannel(Executors.newCachedThreadPool(), s -&gt; s
.subscribe(f -&gt; f
.&lt;Integer&gt;handle((p, h) -&gt; p / 2)
.channel(c -&gt; c.queue(&quot;subscriber1Results&quot;)))
.subscribe(f -&gt; f
.&lt;Integer&gt;handle((p, h) -&gt; p * 2)
.channel(c -&gt; c.queue(&quot;subscriber2Results&quot;))))
.&lt;Integer&gt;handle((p, h) -&gt; p * 3)
.channel(c -&gt; c.queue(&quot;subscriber3Results&quot;));
}
</code><br />Of course the same result we can be achieved with separate <code>IntegrationFlow</code> <code>@Bean</code> definitions, but we hope you&rsquo;ll<br />find the subflow style of logic composition useful.</p><p>Similar <code>publish-subscribe</code> subflow composition is provided by <code>.routeToRecipients()</code>.</p><p>Another example is <code>.discardFlow()</code> instead of <code>.discardChannel()</code> on <code>.filter()</code>.</p><p><code>.route()</code> deserves special attention:<br /><code>java
@Bean
public IntegrationFlow routeFlow() {
return f -&gt; f
.&lt;Integer, Boolean&gt;route(p -&gt; p % 2 == 0,
m -&gt; m.channelMapping(&quot;true&quot;, &quot;evenChannel&quot;)
.subFlowMapping(&quot;false&quot;, sf -&gt;
sf.&lt;Integer&gt;handle((p, h) -&gt; p * 3)))
.transform(Object::toString)
.channel(c -&gt; c.queue(&quot;oddChannel&quot;));
}
</code><br />The <code>.channelMapping()</code> continues to work as in regular <code>Router</code> mapping, but the <code>.subFlowMapping()</code> tied that<br />subflow with main flow. In other words, any router&rsquo;s subflow returns to the main flow after <code>.route()</code>.</p><p>Similar &ldquo;return-to-main-flow&rdquo; subflow is supported by <code>.gateway()</code>:<br /><code>java
@Bean
public IntegrationFlow gatewayFlow() {
return f -&gt;
f.gateway(&quot;gatewayRequest&quot;, g -&gt; g.errorChannel(&quot;gatewayError&quot;).replyTimeout(10L))
.gateway(gf -&gt; gf.transform(&quot;From Gateway SubFlow: &quot;::concat));
}
</code><br />However this Gateway SubFlow is just wired with main flow through the explicit <code>DirectChannel</code> and wrapped to<br />the regular <code>GatewayMessageHandler</code> using that channel as a <code>requestChannel</code> option.</p><p>Of course, subflows can be nested with any depth, but we don&rsquo;t recommend to do that because, in fact, even in the<br />router case, adding complex subflows within a flow would quickly begin to be<br />difficult for a human to parse.</p><p><strong>Conclusion</strong></p><p>We haven&rsquo;t added more <code>protocol specific adapters</code> since the last milestone. Not all adapters will be supported directly by the DSL<br />although the most commonly used ones have first class support.<br />However, those that don&rsquo;t have first class support can easily be wired in using <code>.handle()</code>. As we have discussed previously,<br />we are looking for input to prioritize the implementations of the remaining adapters<br />so, don&rsquo;t be shy to share your thoughts and ideas!</p><p>You can obtain more information about these and existing classes from their<br /><a href="https://github.com/spring-projects/spring-integration-extensions/tree/master/spring-integration-java-dsl">source code</a><br />and from <a href="https://github.com/spring-projects/spring-integration-extensions/wiki/Spring-Integration-Java-DSL-Reference">Reference Manual</a>.</p><p>We look forward to your comments and feedback (<a href="https://stackoverflow.com">StackOverflow</a> (<code>spring-integration</code> tag),<br /><a href="https://jira.spring.io/browse/INTEXT">Spring JIRA</a>, <a href="https://github.com/spring-projects/spring-integration-extensions/issues">GitHub</a>)<br />as soon as possible and report issues you find before we GA towards over a couple weeks.</p><p>As always, we very much welcome <a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md">contributions</a>.</p></div>
</div>
<section id="disqus_thread"></section>
<script type="text/javascript">
      var disqus_shortname = 'spring-io';
      var disqus_identifier = 1805;

      (function(disqus_shortname, document) {
        injectScript('//' + disqus_shortname + '.disqus.com/embed.js');
        injectScript('//' + disqus_shortname + '.disqus.com/count.js');

        function injectScript(url) {
          var s = document.createElement('script');
          s.async = true;
          s.src = url;
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
        }

      }(disqus_shortname, document));
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a class="dsq-brlink" href="https://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="mobile-only">
<p><a href="/blog">
<i class="icon-chevron-left"></i>
Back
</a></p>
</div>
</article>
<aside class="span4 mobile-right-pane" id="sidebar">
<div>
<ul class="right-pane-widget--container secondary-nav with-icon">
<li class="blog-category">
<div class="icon blog-icon all-posts"></div>
<a href="/blog">All Posts</a>
<a class="pull-right" href="/blog.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon engineering"></div>
<a href="/blog/category/engineering">Engineering</a>
<a class="pull-right" href="/blog/category/engineering.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category active">
<div class="icon blog-icon releases"></div>
<a href="/blog/category/releases">Releases</a>
<a class="pull-right" href="/blog/category/releases.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon news-and-events"></div>
<a href="/blog/category/news">News and Events</a>
<a class="pull-right" href="/blog/category/news.atom"><i class="icon-rss"></i></a>
</li>
</ul>
<ul class="social-btn--container">
<a class="social-btn twitter" href="https://twitter.com/springcentral"></a>

<a class="social-btn linkedin" href="https://www.linkedin.com/groups/46964"></a>
<a class="social-btn youtube" href="/videos"></a>
</ul>
<div id="blog-sidebar-newsletter">
<p>Get updates from The Spring Team delivered to your inbox</p>
<script src="https://app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_4723"></form>
<script>
        MktoForms2.loadForm("https://app-sj05.marketo.com", "625-IUJ-009", 4723, function(form){
          form.onSuccess(function(values, followUpUrl) {
            form.getFormElem().html("<p>Thank you!</p>");
            return false;
          });
        });
      </script>
</div>
</div>
</aside>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>