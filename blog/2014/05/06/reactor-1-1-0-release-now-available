<!DOCTYPE html>
<html data-code-prettify="" data-mobile-support="" data-search="">
<head>
<title>Reactor 1.1.0.RELEASE now available</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<link href="/css/blog-92993c3ec6808bded45b277c18d7d621.css" rel="stylesheet" type="text/css" />

<meta content="summary" name="twitter:card" />
<meta content="@springcentral" name="twitter:site" />
<meta name="twitter:title" content="Reactor 1.1.0.RELEASE now available" />
<meta name="twitter:description" content="&lt;p&gt;The Reactor team is pleased to announce that some significant updates to the Reactor framework are now available in the 1.1.0.RELEASE version of Reactor’s flexible, asynchronous, fast data framework. This version includes numerous bug fixes and rewrites of key components to make them faster and, maybe more importantly, more efficient in terms of memory usage. Reactor 1.1 now includes the fantastic &lt;code&gt;gs-collections&lt;/code&gt; library from Goldman Sachs [1] which provides a very fluent API for dealing with maps and collections of all kinds.&lt;/p&gt;
" />
<meta name="twitter:creator" content="@j_brisbin" />
<meta name="twitter:image:src" content="http://gravatar.com/avatar/5500b5cf634f9a3921e4619778a1425f?s=200" />

<meta property="og:title" content="Reactor 1.1.0.RELEASE now available" />
<meta property="og:image" content="http://gravatar.com/avatar/5500b5cf634f9a3921e4619778a1425f?s=200" />
<meta property="og:description" content="&lt;p&gt;The Reactor team is pleased to announce that some significant updates to the Reactor framework are now available in the 1.1.0.RELEASE version of Reactor’s flexible, asynchronous, fast data framework. This version includes numerous bug fixes and rewrites of key components to make them faster and, maybe more importantly, more efficient in terms of memory usage. Reactor 1.1 now includes the fantastic &lt;code&gt;gs-collections&lt;/code&gt; library from Goldman Sachs [1] which provides a very fluent API for dealing with maps and collections of all kinds.&lt;/p&gt;
" />
<meta content="article" property="og:type" />
<meta property="og:article:published_time" content="2014-05-06 15:02:13.145" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link active">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link active">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div></div>
<div class="container-fluid">
<div class="main-body--wrapper">
<div class="row-fluid blog--wrapper">
<article class="span8 mobile-left-pane" id="content">
<header class="desktop-only">
<div class="blog-category content--title">
<div>Engineering</div>
</div>
<div class="blog-category active content--title">
<div>Releases</div>
</div>
<div class="blog-category content--title">
<div>News and Events</div>
</div>
</header>
<div class="blog--container">
<header>
<h1 class="blog--title">Reactor 1.1.0.RELEASE now available</h1>
<div class="meta-data--container">
<div class="meta-data--item desktop-only">
<div class="meta-data--icon icon blog-icon releases"></div>
<a class="category">Releases</a>
</div>
<div class="meta-data--item">
<img class="meta-data--icon" src="https://gravatar.com/avatar/5500b5cf634f9a3921e4619778a1425f?s=20&amp;d=mm" />
<span class="author">Jon Brisbin</span>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2014-05-06 15:02:13.145">May 06, 2014</time>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon comments"></div>
<a class="comments" data-disqus-identifier="1555" href="/blog/2014/05/06/reactor-1-1-0-release-now-available#disqus_thread">
</a></div>
</div>
</header>
<div class="blog--post"><p>The Reactor team is pleased to announce that some significant updates to the Reactor framework are now available in the 1.1.0.RELEASE version of Reactor&rsquo;s flexible, asynchronous, fast data framework. This version includes numerous bug fixes and rewrites of key components to make them faster and, maybe more importantly, more efficient in terms of memory usage. Reactor 1.1 now includes the fantastic <code>gs-collections</code> library from Goldman Sachs [1] which provides a very fluent API for dealing with maps and collections of all kinds.</p><p>Here is a non-exhaustive list of changes between Reactor 1.0 and 1.1:</p><h4><a href="#stream-promise" class="anchor" name="stream-promise"></a>Stream / Promise</h4>
<ul>
<li>Improved Stream and Promise value-handling</li>
<li>Additional composition methods like connect(), merge(), timeout(), window() and more</li>
<li>Many methods moved into Composable so shared between Stream and Promise</li>
</ul><p>Some of the more useful additions to the Stream API over version 1.0 include the <code>Stream.window</code> and <code>Stream.timeout</code> methods. This allows you to collect values for a given period of time and pass them on down the processing chain. For example, to process whatever values have collected every 500ms, use a <code>window</code>:</p>
<pre><code class="prettyprint java">Deferred&lt;Pojo, Stream&lt;Pojo&gt;&gt; in = Streams.defer(env);

// add all collected values every half-second
in.compose()
  .window(500)
  .consume(values -&gt; service.addAll(values));

// another service emits data into the `Deferred`
Pojo p;
while(null != (p = input.next())) {
  in.accept(p);
}
</code></pre><h4><a href="#utilities" class="anchor" name="utilities"></a>Utilities</h4>
<ul>
<li>Robust HashWheelTimer implemenation based on a <code>RingBuffer</code></li>
<li>Allocator API for efficient object pooling</li>
<li>New Consumer Registry implementation based on <code>gs-collections</code> 5.0 [1]</li>
</ul><p>If you need to control memory usage in a more predictable way, Reactor includes an allocation API that can be backed by any specific implementation of pooling that you require. Reactor 1.1 comes with two implementations: a RingBuffer-based <code>Allocator</code>, and a reference-counting <code>Allocator</code>.</p><p>The RingBuffer-based <code>Allocator</code> can be configured to act very much like a standard Disruptor <code>RingBuffer</code> with event handlers. But if all you need is to block the producer and use a slot-based allocation strategy, then it&rsquo;s very simple to use a RingBuffer for allocation:</p>
<pre><code class="prettyprint java">Allocator&lt;Event&lt;Buffer&gt;&gt; pool = new RingBufferAllocatorSpec&lt;Event&lt;Buffer&gt;&gt;()
    .ringSize(16 * 1024)
    .allocator(() -&gt; new Event&lt;Buffer&gt;(null))
    .waitStrategy(new BusySpinWaitStrategy())
    .get();

// in your code, maintain a `Reference` you can release
Reference&lt;Event&lt;Buffer&gt;&gt; ref = pool.allocate();

// pass your data POJO to other services
Event&lt;Buffer&gt; ev = ref.get().setData(buffer);
service.invoke(ev);

// when you&#39;re done, release the reference
ref.release();
</code></pre><h4><a href="#logging" class="anchor" name="logging"></a>Logging</h4>
<ul>
<li>Extremely efficient high-speed logging using Java Chronicle</li>
<li>Re-written Reactor-based async appender implementations</li>
</ul><p>Logging can be very detrimental to an asynchronous application&rsquo;s performance&ndash;particularly one that uses technologies like a RingBuffer, which uses a single thread to support many tasks. If that thread gets blocked by one task doing IO writing a log entry, then that could potentially cascade back through the application and cause it to grind to a halt.</p><p>Reactor includes an efficient asynchronous <code>Appender</code> implementation for Logback [2] which moves the actual appending onto a dedicated logging thread. This should help alleviate thread pressure caused by logging in most applications. But sometimes even that&rsquo;s not enough and a higher-throughput solution is needed. That&rsquo;s where Reactor&rsquo;s Java Chronicle-based <code>Appender</code> comes in handy.</p><p>The Java Chronicle [3] is a high-speed messaging library that uses memory-mapped files for fast and efficient data persistence. Reactor integrates this with Logback by providing an <code>Appender</code> that logs raw event data from your application but does not have to invoke downstream appenders. This means your logging event is stored in a <code>Chronicle</code> but in its raw state. An additional utility is required to post-process a &ldquo;durable&rdquo; log file and either send those events to a &ldquo;real&rdquo; appender (like to a file or database) or to peek into the the <code>Chronicle</code> and look for entries that match a given pattern. This is extremely useful in production situations where you don&rsquo;t care about logging if the application is functioning normally but if something goes wrong, you can easily extract the data from the <code>Chronicle</code> into a standard log file for forensic analysis.</p><p>To configure a Reactor <code>DurableAsyncAppender</code> to do high-speed logging, simply declare it in your Logback configuration. Here&rsquo;s an example of using it in a <code>logback.xml</code> config:</p>
<pre><code class="prettyprint xml">  &lt;appender name=&quot;chronicle&quot; class=&quot;reactor.logback.DurableAsyncAppender&quot;&gt;
    &lt;!-- Uncomment to have log events also sent to a &quot;normal&quot; file appender --&gt;
    &lt;!--appender-ref ref=&quot;logfile&quot;/--&gt;
    &lt;basePath&gt;log/&lt;/basePath&gt;
    &lt;backlog&gt;2097152&lt;/backlog&gt;
  &lt;/appender&gt;
</code></pre><p>If something goes wrong, you can analyze the chronicle using the included utility by directing events extracted from the chronicle into the given &ldquo;real&rdquo; <code>Appender</code>. This example invokes the log utility (the <code>reactor-logback.jar</code> artifact must be on the classpath) and reads the durable log files from the <code>log/</code> directory, reads in the Logback configuration from <code>logback.xml</code> and then outputs all ERROR messages into the <code>logfile</code> appender, which is defined in the <code>logback.xml</code> config file.</p>
<pre><code class="prettyprint">java reactor.logback.DurableLogUtility --path log/ --config logback.xml --output logfile --level ERROR
</code></pre><h4><a href="#groovy" class="anchor" name="groovy"></a>Groovy</h4>
<ul>
<li>Better organization of Groovy support</li>
<li>AST-based extensions moved to their own subproject for better Gradle compatibility</li>
<li>Ready for Groovy 2.3 and Java 1.8</li>
</ul><p>Groovy 2.3.0 <a href="https://glaforge.appspot.com/article/groovy-2-3-0-is-out">has just been released</a> and includes <a href="http://groovy.codehaus.org/Groovy+2.3+release+notes?nc">a ton of new features and performance improvements</a> as well as lambda closure support and other cool JDK 8 features. Reactor&rsquo;s Groovy support is ready for use in Groovy 2.3 while still be compatible with Groovy 2.2 on JDK 7.</p><h4><a href="#network-tcp" class="anchor" name="network-tcp"></a>Network/TCP</h4>
<ul>
<li>Renamed <code>reactor-tcp</code> to <code>reactor-net</code></li>
<li>Refactored base abstractions to handle both TCP and UDP</li>
<li>Added UDP support using Netty</li>
<li>Added ZeroMQ support using <code>jeromq</code></li>
<li>Rewritten <code>reconnect</code> support</li>
<li>Improved and exapanded testing</li>
</ul><p>Improvements to the TCP module have been made which incorporate support for UDP as well as a new implementation based on ZeroMQ. [4]</p><p>The ZeroMQ support in Reactor features <code>tcp</code> and <code>inproc</code> support and provides a succinct fluent API for creating clients and servers very quickly using Reactor&rsquo;s effecient codec facility.</p>
<pre><code class="prettyprint java">ZeroMQ&lt;JsonData&gt; zmq = new ZeroMQ&lt;&gt;(reactorEnv)
    .codec(new JacksonJsonCodec());

zmq.router(&quot;inproc://queue&quot;)
   .consume(channel -&gt; channel.consume(service::invoke));

zmq.dealer(&quot;inproc://queue&quot;)
   .consume(channel -&gt; {
     JsonData data;
     while(null != (data = in.next())) {
       channel.sendAndForget(data);
     }
   });
</code></pre><h4><a href="#testing" class="anchor" name="testing"></a>Testing</h4>
<ul>
<li>Numerous improvements to benchmarking</li>
<li>Added dedicated <code>reactor-benchmark</code> project based on JMH [5]</li>
<li>Removed most benchmarking code from core project</li>
<li>Expanded and improved test coverage</li>
</ul><h2><a href="#usage" class="anchor" name="usage"></a>Usage</h2><p>Artifacts are available in Maven Central and <code>repo.spring.io/libs-release</code>. Please note that the coordinates for the Spring support have changed to <code>org.projectreactor.spring:reactor-spring-*</code> in version 1.1 [6].</p><p>Reference documentation is available in the <a href="https://github.com/reactor/reactor/wiki">GitHub wiki</a>.</p><p>Updated API docs are on the <a href="https://reactor.github.io/docs/api/">GitHub pages site</a>.</p><p>&mdash;-<br />[1] - <a href="https://github.com/goldmansachs/gs-collections">https://github.com/goldmansachs/gs-collections</a></p><p>[2] - <a href="http://logback.qos.ch/">http://logback.qos.ch/</a></p><p>[3] - <a href="https://github.com/OpenHFT/Java-Chronicle">https://github.com/OpenHFT/Java-Chronicle</a></p><p>[4] - <a href="http://zeromq.org/">http://zeromq.org/</a></p><p>[5] - <a href="https://openjdk.java.net/projects/code-tools/jmh/">http://openjdk.java.net/projects/code-tools/jmh/</a></p><p>[6] - <a href="https://repo.spring.io/libs-release/org/projectreactor/spring/">http://repo.spring.io/libs-release/org/projectreactor/spring/</a></p></div>
</div>
<section id="disqus_thread"></section>
<script type="text/javascript">
      var disqus_shortname = 'spring-io';
      var disqus_identifier = 1555;

      (function(disqus_shortname, document) {
        injectScript('//' + disqus_shortname + '.disqus.com/embed.js');
        injectScript('//' + disqus_shortname + '.disqus.com/count.js');

        function injectScript(url) {
          var s = document.createElement('script');
          s.async = true;
          s.src = url;
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
        }

      }(disqus_shortname, document));
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a class="dsq-brlink" href="https://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="mobile-only">
<p><a href="/blog">
<i class="icon-chevron-left"></i>
Back
</a></p>
</div>
</article>
<aside class="span4 mobile-right-pane" id="sidebar">
<div>
<ul class="right-pane-widget--container secondary-nav with-icon">
<li class="blog-category">
<div class="icon blog-icon all-posts"></div>
<a href="/blog">All Posts</a>
<a class="pull-right" href="/blog.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon engineering"></div>
<a href="/blog/category/engineering">Engineering</a>
<a class="pull-right" href="/blog/category/engineering.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category active">
<div class="icon blog-icon releases"></div>
<a href="/blog/category/releases">Releases</a>
<a class="pull-right" href="/blog/category/releases.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon news-and-events"></div>
<a href="/blog/category/news">News and Events</a>
<a class="pull-right" href="/blog/category/news.atom"><i class="icon-rss"></i></a>
</li>
</ul>
<ul class="social-btn--container">
<a class="social-btn twitter" href="https://twitter.com/springcentral"></a>

<a class="social-btn linkedin" href="https://www.linkedin.com/groups/46964"></a>
<a class="social-btn youtube" href="/videos"></a>
</ul>
<div id="blog-sidebar-newsletter">
<p>Get updates from The Spring Team delivered to your inbox</p>
<script src="https://app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_4723"></form>
<script>
        MktoForms2.loadForm("https://app-sj05.marketo.com", "625-IUJ-009", 4723, function(form){
          form.onSuccess(function(values, followUpUrl) {
            form.getFormElem().html("<p>Thank you!</p>");
            return false;
          });
        });
      </script>
</div>
</div>
</aside>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>