<!DOCTYPE html>
<html data-code-prettify="" data-mobile-support="" data-search="">
<head>
<title>This Week in Spring  - June 3rd, 2014</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<link href="/css/blog-92993c3ec6808bded45b277c18d7d621.css" rel="stylesheet" type="text/css" />

<meta content="summary" name="twitter:card" />
<meta content="@springcentral" name="twitter:site" />
<meta name="twitter:title" content="This Week in Spring  - June 3rd, 2014" />
<meta name="twitter:description" content="&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;. This week&#39;s an exciting week! Well, let&#39;s be honest. They&#39;re all exciting weeks. But in particular, this week&#39;s going to make a lot of people happy. Watch &lt;a href=&quot;http://spring.io/blog&quot;&gt;the blog&lt;/a&gt; and I&#39;ll see you back here next week to recap! :)&lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;Oh my goodness! &lt;a href=&quot;https://spring.io/blog/2014/06/02/spring-boot-1-1-0-rc1-available-now&quot;&gt;Spring Boot 1.1.0.RC1 is now available&lt;/a&gt;! The new release maintains the epic with support for Spring Data Elasticsearch, HornetQ, and Spring Social, and a &lt;em&gt;lot&lt;/em&gt; more! Grab the latest release, kick the tires, and feedback &lt;a href=&quot;http://twitter.com/SpringBoot&quot;&gt;on Twitter&lt;/a&gt; or &lt;a href=&quot;http://github.com/spring-projects/spring-boot&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Dr. Mark Pollack has just announced that the latest release of &lt;a href=&quot;https://spring.io/blog/2014/06/03/spring-xd-1-0-0-m7-released&quot;&gt;Spring XD, 1.0.0.M7&lt;/a&gt; is now available. The new release provides a lot of great new features. My favorite is the ability to pin data to a certain stream - think of this as &lt;em&gt;correllation&lt;/em&gt; using a message&#39;s content - so that you can preserve stateful operations. Think of this as a &lt;em&gt;great&lt;/em&gt; way to route and divide messages based on a useful business key. There&#39;s a great example in the release notes. &lt;/li&gt; 
 &lt;li&gt;Azul rockstar Gil Tene gave an amazing talk on &lt;a href=&quot;https://spring.io/blog/2014/06/03/springone2gx-2013-replay-how-not-to-measure-latency&quot;&gt;reducing latency for SpringOne2gX 2013 that is now available online&lt;/a&gt;. Gil is one of our industry&#39;s mad scientists. I haven&#39;t yet seen this talk, but I will, and I highly recommend that you do too. Azul makes high performance, low latency JVMs both as appliances and as deliverable software. His talks thus stem from a &lt;em&gt;lot&lt;/em&gt; of thankless research and development that I&#39;d just as soon spare myself by watching, and learning from, his talks. Go, Gil!&lt;/li&gt; 
 &lt;li&gt;June webinars are here! Michael Minella in &lt;a href=&quot;http://spring.io/blog/2014/05/27/webinar-spring-batch-3-0-0&quot;&gt;Spring Batch 3.0.0&lt;/a&gt; on June 10th, and Glenn Renfro in &lt;a href=&quot;http://spring.io/blog/2014/05/27/webinar-spring-integration-done-boot-ifully&quot;&gt;Spring Integration Done Boot-ifully&lt;/a&gt; on June 17th.&lt;/li&gt; 
 &lt;li&gt;Spring ninja Greg Turnquist has put together a &lt;a href=&quot;https://spring.io/blog/2014/06/02/using-new-when-js-3-2-2-to-build-a-front-end-for-spring-data-rest&quot;&gt;teaser post on using the amazing &lt;code&gt;when.js&lt;/code&gt; Promises/A+ implementation in a front-end REST client&lt;/a&gt; in advance of his SpringOne2GX 2014 talk. Check out the post &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;http://springone2gx.com&quot;&gt;his talk at the conference&lt;/a&gt;! &lt;/li&gt; 
 &lt;li&gt;Ramnivas Laddad, a Spring ninja, original AspectJ leaders, and architects behind Cloud Foundry, has just posted a &lt;a href=&quot;https://spring.io/blog/2014/06/03/introducing-spring-cloud&quot;&gt;very cool look at Spring Cloud&lt;/a&gt;, which makes consuming client services from different middle/infrastructure services (a database, a message queue) on various Platforms-as-a-Service (PaaSes) a simple matter of platform-decoupling configuration.&lt;/li&gt; 
 &lt;li&gt;The replay of ADP&#39;s Jeffery Sologov&#39;s talk looking &lt;a href=&quot;https://spring.io/blog/2014/06/03/springone2gx-2013-replay-the-pitfalls-of-building-large-scale-applications&quot;&gt;at the pitfalls of building large scale applications&lt;/a&gt; is now up! Check it out! &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;@JakubJirutka&quot;&gt;ttp://twitter.com/JakubJirutka&lt;/a&gt; chimed in to tell us about this &lt;em&gt;epic&lt;/em&gt; &lt;a href=&quot;https://github.com/jirutka/validator-spring&quot;&gt;Spring Expression Language (SpEL)-powered implementation of the Bean Validation API (JSR 303/349)&lt;/a&gt;. The GitHub offers an interesting point, &quot;itâ€™s especially very useful for cross-field validations that are very complicated with a plain Bean Validation.&quot; I &lt;em&gt;love&lt;/em&gt; the examples, too: &lt;pre&gt; 
@SpELAssert(value = &quot;password.equals(passwordVerify)&quot;,
        applyIf = &quot;password || passwordVerify&quot;,
        message = &quot;{validator.passwords_not_same}&quot;)
public class User {
  private String password;
  private String passwordVerify;
}
&lt;/pre&gt; &lt;p&gt;Nice job!&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;A hat tip to &lt;a href=&quot;http://twitter.com/briandussault&quot;&gt;the amazing Brian Dussault&lt;/a&gt; for finding this: &lt;a href=&quot;http://www.devnull.org/zuul&quot;&gt;Zuul is a nifty looking application configuration management solution&lt;/a&gt; that offers a clean Spring client API.&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;You know what made my day yesterday? A &lt;a href=&quot;https://github.com/spencergibb/halfpipe/blob/master/halfpipe-client/src/main/java/halfpipe/client/HystrixInvocationHandler.java&quot;&gt;&lt;code&gt;HystrixInvocationHandler&lt;/code&gt;&lt;/a&gt;. An &lt;code&gt;InvocationHandler&lt;/code&gt; is used by the JDK (and Spring&#39;s rich proxying subsystem) to create proxies that wrap beans. This &lt;code&gt;InvocationHandler&lt;/code&gt; wraps method invocations on a given bean in Netflix&#39;s OSS &lt;a href=&quot;https://github.com/Netflix/Hystrix&quot;&gt;Hystrix&lt;/a&gt; project&#39;s &lt;code&gt;Command&lt;/code&gt; objects. Hystrix &lt;code&gt;Command&lt;/code&gt;s wrap functionality and provide/support &lt;a href=&quot;http://techblog.netflix.com/2011/12/making-netflix-api-more-resilient.html&quot;&gt;resiliency patterns&lt;/a&gt;. I can&#39;t wait to see more of &lt;a href=&quot;http://twitter.com/spencerbgibb&quot;&gt;what becomes of Spencer Gibb&lt;/a&gt;&#39;s Halfpipe project! &lt;/li&gt; 
 &lt;li&gt;Our pal David Welch is at it again, this time with an interesting project called Spring Tiered, which aims to simplify &lt;em&gt;even further&lt;/em&gt; (and normalize) &lt;a href=&quot;https://github.com/Lemniscate/spring-tiered&quot;&gt;the development of HATEOAS based services&lt;/a&gt;. Interesting...&lt;/li&gt; 
 &lt;li&gt;Also, speaking of building (and consuming) resilient services, check out &lt;a href=&quot;http://twitter.com/crichardson&quot;&gt;Chris Richardson&lt;/a&gt;&#39;s fantastic talk from SpringOne2GX 2013 on &lt;a href=&quot;https://spring.io/blog/2014/04/29/springone2gx-2013-replay-futures-and-rx-observables-powerful-abstractions-for-consuming-web-services-asynchronously&quot;&gt;powerful abstractions for consuming services asynchronously&lt;/a&gt;. &lt;/li&gt; 
 &lt;li&gt;Also, I put together a post talking about &lt;a href=&quot;http://www.joshlong.com/jl/blogPost/dont_want_to_use_maven_with_spring.html&quot;&gt;getting started with Maven (and alternatives) and Spring&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
" />
<meta name="twitter:creator" content="@starbuxman" />
<meta name="twitter:image:src" content="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=200" />

<meta property="og:title" content="This Week in Spring  - June 3rd, 2014" />
<meta property="og:image" content="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=200" />
<meta property="og:description" content="&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;. This week&#39;s an exciting week! Well, let&#39;s be honest. They&#39;re all exciting weeks. But in particular, this week&#39;s going to make a lot of people happy. Watch &lt;a href=&quot;http://spring.io/blog&quot;&gt;the blog&lt;/a&gt; and I&#39;ll see you back here next week to recap! :)&lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;Oh my goodness! &lt;a href=&quot;https://spring.io/blog/2014/06/02/spring-boot-1-1-0-rc1-available-now&quot;&gt;Spring Boot 1.1.0.RC1 is now available&lt;/a&gt;! The new release maintains the epic with support for Spring Data Elasticsearch, HornetQ, and Spring Social, and a &lt;em&gt;lot&lt;/em&gt; more! Grab the latest release, kick the tires, and feedback &lt;a href=&quot;http://twitter.com/SpringBoot&quot;&gt;on Twitter&lt;/a&gt; or &lt;a href=&quot;http://github.com/spring-projects/spring-boot&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Dr. Mark Pollack has just announced that the latest release of &lt;a href=&quot;https://spring.io/blog/2014/06/03/spring-xd-1-0-0-m7-released&quot;&gt;Spring XD, 1.0.0.M7&lt;/a&gt; is now available. The new release provides a lot of great new features. My favorite is the ability to pin data to a certain stream - think of this as &lt;em&gt;correllation&lt;/em&gt; using a message&#39;s content - so that you can preserve stateful operations. Think of this as a &lt;em&gt;great&lt;/em&gt; way to route and divide messages based on a useful business key. There&#39;s a great example in the release notes. &lt;/li&gt; 
 &lt;li&gt;Azul rockstar Gil Tene gave an amazing talk on &lt;a href=&quot;https://spring.io/blog/2014/06/03/springone2gx-2013-replay-how-not-to-measure-latency&quot;&gt;reducing latency for SpringOne2gX 2013 that is now available online&lt;/a&gt;. Gil is one of our industry&#39;s mad scientists. I haven&#39;t yet seen this talk, but I will, and I highly recommend that you do too. Azul makes high performance, low latency JVMs both as appliances and as deliverable software. His talks thus stem from a &lt;em&gt;lot&lt;/em&gt; of thankless research and development that I&#39;d just as soon spare myself by watching, and learning from, his talks. Go, Gil!&lt;/li&gt; 
 &lt;li&gt;June webinars are here! Michael Minella in &lt;a href=&quot;http://spring.io/blog/2014/05/27/webinar-spring-batch-3-0-0&quot;&gt;Spring Batch 3.0.0&lt;/a&gt; on June 10th, and Glenn Renfro in &lt;a href=&quot;http://spring.io/blog/2014/05/27/webinar-spring-integration-done-boot-ifully&quot;&gt;Spring Integration Done Boot-ifully&lt;/a&gt; on June 17th.&lt;/li&gt; 
 &lt;li&gt;Spring ninja Greg Turnquist has put together a &lt;a href=&quot;https://spring.io/blog/2014/06/02/using-new-when-js-3-2-2-to-build-a-front-end-for-spring-data-rest&quot;&gt;teaser post on using the amazing &lt;code&gt;when.js&lt;/code&gt; Promises/A+ implementation in a front-end REST client&lt;/a&gt; in advance of his SpringOne2GX 2014 talk. Check out the post &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;http://springone2gx.com&quot;&gt;his talk at the conference&lt;/a&gt;! &lt;/li&gt; 
 &lt;li&gt;Ramnivas Laddad, a Spring ninja, original AspectJ leaders, and architects behind Cloud Foundry, has just posted a &lt;a href=&quot;https://spring.io/blog/2014/06/03/introducing-spring-cloud&quot;&gt;very cool look at Spring Cloud&lt;/a&gt;, which makes consuming client services from different middle/infrastructure services (a database, a message queue) on various Platforms-as-a-Service (PaaSes) a simple matter of platform-decoupling configuration.&lt;/li&gt; 
 &lt;li&gt;The replay of ADP&#39;s Jeffery Sologov&#39;s talk looking &lt;a href=&quot;https://spring.io/blog/2014/06/03/springone2gx-2013-replay-the-pitfalls-of-building-large-scale-applications&quot;&gt;at the pitfalls of building large scale applications&lt;/a&gt; is now up! Check it out! &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;@JakubJirutka&quot;&gt;ttp://twitter.com/JakubJirutka&lt;/a&gt; chimed in to tell us about this &lt;em&gt;epic&lt;/em&gt; &lt;a href=&quot;https://github.com/jirutka/validator-spring&quot;&gt;Spring Expression Language (SpEL)-powered implementation of the Bean Validation API (JSR 303/349)&lt;/a&gt;. The GitHub offers an interesting point, &quot;itâ€™s especially very useful for cross-field validations that are very complicated with a plain Bean Validation.&quot; I &lt;em&gt;love&lt;/em&gt; the examples, too: &lt;pre&gt; 
@SpELAssert(value = &quot;password.equals(passwordVerify)&quot;,
        applyIf = &quot;password || passwordVerify&quot;,
        message = &quot;{validator.passwords_not_same}&quot;)
public class User {
  private String password;
  private String passwordVerify;
}
&lt;/pre&gt; &lt;p&gt;Nice job!&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;A hat tip to &lt;a href=&quot;http://twitter.com/briandussault&quot;&gt;the amazing Brian Dussault&lt;/a&gt; for finding this: &lt;a href=&quot;http://www.devnull.org/zuul&quot;&gt;Zuul is a nifty looking application configuration management solution&lt;/a&gt; that offers a clean Spring client API.&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;You know what made my day yesterday? A &lt;a href=&quot;https://github.com/spencergibb/halfpipe/blob/master/halfpipe-client/src/main/java/halfpipe/client/HystrixInvocationHandler.java&quot;&gt;&lt;code&gt;HystrixInvocationHandler&lt;/code&gt;&lt;/a&gt;. An &lt;code&gt;InvocationHandler&lt;/code&gt; is used by the JDK (and Spring&#39;s rich proxying subsystem) to create proxies that wrap beans. This &lt;code&gt;InvocationHandler&lt;/code&gt; wraps method invocations on a given bean in Netflix&#39;s OSS &lt;a href=&quot;https://github.com/Netflix/Hystrix&quot;&gt;Hystrix&lt;/a&gt; project&#39;s &lt;code&gt;Command&lt;/code&gt; objects. Hystrix &lt;code&gt;Command&lt;/code&gt;s wrap functionality and provide/support &lt;a href=&quot;http://techblog.netflix.com/2011/12/making-netflix-api-more-resilient.html&quot;&gt;resiliency patterns&lt;/a&gt;. I can&#39;t wait to see more of &lt;a href=&quot;http://twitter.com/spencerbgibb&quot;&gt;what becomes of Spencer Gibb&lt;/a&gt;&#39;s Halfpipe project! &lt;/li&gt; 
 &lt;li&gt;Our pal David Welch is at it again, this time with an interesting project called Spring Tiered, which aims to simplify &lt;em&gt;even further&lt;/em&gt; (and normalize) &lt;a href=&quot;https://github.com/Lemniscate/spring-tiered&quot;&gt;the development of HATEOAS based services&lt;/a&gt;. Interesting...&lt;/li&gt; 
 &lt;li&gt;Also, speaking of building (and consuming) resilient services, check out &lt;a href=&quot;http://twitter.com/crichardson&quot;&gt;Chris Richardson&lt;/a&gt;&#39;s fantastic talk from SpringOne2GX 2013 on &lt;a href=&quot;https://spring.io/blog/2014/04/29/springone2gx-2013-replay-futures-and-rx-observables-powerful-abstractions-for-consuming-web-services-asynchronously&quot;&gt;powerful abstractions for consuming services asynchronously&lt;/a&gt;. &lt;/li&gt; 
 &lt;li&gt;Also, I put together a post talking about &lt;a href=&quot;http://www.joshlong.com/jl/blogPost/dont_want_to_use_maven_with_spring.html&quot;&gt;getting started with Maven (and alternatives) and Spring&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
" />
<meta content="article" property="og:type" />
<meta property="og:article:published_time" content="2014-06-03 23:17:00.0" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link active">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link active">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div></div>
<div class="container-fluid">
<div class="main-body--wrapper">
<div class="row-fluid blog--wrapper">
<article class="span8 mobile-left-pane" id="content">
<header class="desktop-only">
<div class="blog-category active content--title">
<div>Engineering</div>
</div>
<div class="blog-category content--title">
<div>Releases</div>
</div>
<div class="blog-category content--title">
<div>News and Events</div>
</div>
</header>
<div class="blog--container">
<header>
<h1 class="blog--title">This Week in Spring - June 3rd, 2014</h1>
<div class="meta-data--container">
<div class="meta-data--item desktop-only">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category">Engineering</a>
</div>
<div class="meta-data--item">
<img class="meta-data--icon" src="https://gravatar.com/avatar/fb22593caf24e4bb4c98d467cdd247e6?s=20&amp;d=mm" />
<a class="author" rel="author" href="/team/jlong">Josh Long</a>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2014-06-03 23:17:00.0">June 03, 2014</time>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon comments"></div>
<a class="comments" data-disqus-identifier="1623" href="/blog/2014/06/03/this-week-in-spring-june-3rd-2014#disqus_thread">
</a></div>
</div>
</header>
<div class="blog--post"><p>Welcome to another installment of <em>This Week in Spring</em>. This week's an exciting week! Well, let's be honest. They're all exciting weeks. But in particular, this week's going to make a lot of people happy. Watch <a href="https://spring.io/blog">the blog</a> and I'll see you back here next week to recap! :)</p>
<ol>
<li>Oh my goodness! <a href="https://spring.io/blog/2014/06/02/spring-boot-1-1-0-rc1-available-now">Spring Boot 1.1.0.RC1 is now available</a>! The new release maintains the epic with support for Spring Data Elasticsearch, HornetQ, and Spring Social, and a <em>lot</em> more! Grab the latest release, kick the tires, and feedback <a href="https://twitter.com/SpringBoot">on Twitter</a> or <a href="https://github.com/spring-projects/spring-boot">GitHub</a>.</li>
<li>Dr. Mark Pollack has just announced that the latest release of <a href="https://spring.io/blog/2014/06/03/spring-xd-1-0-0-m7-released">Spring XD, 1.0.0.M7</a> is now available. The new release provides a lot of great new features. My favorite is the ability to pin data to a certain stream - think of this as <em>correllation</em> using a message's content - so that you can preserve stateful operations. Think of this as a <em>great</em> way to route and divide messages based on a useful business key. There's a great example in the release notes. </li>
<li>Azul rockstar Gil Tene gave an amazing talk on <a href="https://spring.io/blog/2014/06/03/springone2gx-2013-replay-how-not-to-measure-latency">reducing latency for SpringOne2gX 2013 that is now available online</a>. Gil is one of our industry's mad scientists. I haven't yet seen this talk, but I will, and I highly recommend that you do too. Azul makes high performance, low latency JVMs both as appliances and as deliverable software. His talks thus stem from a <em>lot</em> of thankless research and development that I'd just as soon spare myself by watching, and learning from, his talks. Go, Gil!</li>
<li>June webinars are here! Michael Minella in <a href="https://spring.io/blog/2014/05/27/webinar-spring-batch-3-0-0">Spring Batch 3.0.0</a> on June 10th, and Glenn Renfro in <a href="https://spring.io/blog/2014/05/27/webinar-spring-integration-done-boot-ifully">Spring Integration Done Boot-ifully</a> on June 17th.</li>
<li>Spring ninja Greg Turnquist has put together a <a href="https://spring.io/blog/2014/06/02/using-new-when-js-3-2-2-to-build-a-front-end-for-spring-data-rest">teaser post on using the amazing <code>when.js</code> Promises/A+ implementation in a front-end REST client</a> in advance of his SpringOne2GX 2014 talk. Check out the post <em>and</em> <a href="http://springone2gx.com">his talk at the conference</a>! </li>
<li>Ramnivas Laddad, a Spring ninja, original AspectJ leaders, and architects behind Cloud Foundry, has just posted a <a href="https://spring.io/blog/2014/06/03/introducing-spring-cloud">very cool look at Spring Cloud</a>, which makes consuming client services from different middle/infrastructure services (a database, a message queue) on various Platforms-as-a-Service (PaaSes) a simple matter of platform-decoupling configuration.</li>
<li>The replay of ADP's Jeffery Sologov's talk looking <a href="https://spring.io/blog/2014/06/03/springone2gx-2013-replay-the-pitfalls-of-building-large-scale-applications">at the pitfalls of building large scale applications</a> is now up! Check it out! </li>
<li><a href="@JakubJirutka">ttp://twitter.com/JakubJirutka</a> chimed in to tell us about this <em>epic</em> <a href="https://github.com/jirutka/validator-spring">Spring Expression Language (SpEL)-powered implementation of the Bean Validation API (JSR 303/349)</a>. The GitHub offers an interesting point, "itâ€™s especially very useful for cross-field validations that are very complicated with a plain Bean Validation." I <em>love</em> the examples, too:
<pre> 
@SpELAssert(value = "password.equals(passwordVerify)",
        applyIf = "password || passwordVerify",
        message = "{validator.passwords_not_same}")
public class User {
  private String password;
  private String passwordVerify;
}
</pre>
<p>Nice job!</p></li>
<li><p>A hat tip to <a href="https://twitter.com/briandussault">the amazing Brian Dussault</a> for finding this: <a href="http://www.devnull.org/zuul">Zuul is a nifty looking application configuration management solution</a> that offers a clean Spring client API.</p></li>
<li>You know what made my day yesterday? A <a href="https://github.com/spencergibb/halfpipe/blob/master/halfpipe-client/src/main/java/halfpipe/client/HystrixInvocationHandler.java"><code>HystrixInvocationHandler</code></a>. An <code>InvocationHandler</code> is used by the JDK (and Spring's rich proxying subsystem) to create proxies that wrap beans. This <code>InvocationHandler</code> wraps method invocations on a given bean in Netflix's OSS <a href="https://github.com/Netflix/Hystrix">Hystrix</a> project's <code>Command</code> objects. Hystrix <code>Command</code>s wrap functionality and provide/support <a href="http://techblog.netflix.com/2011/12/making-netflix-api-more-resilient.html">resiliency patterns</a>. I can't wait to see more of <a href="https://twitter.com/spencerbgibb">what becomes of Spencer Gibb</a>'s Halfpipe project! </li>
<li>Our pal David Welch is at it again, this time with an interesting project called Spring Tiered, which aims to simplify <em>even further</em> (and normalize) <a href="https://github.com/Lemniscate/spring-tiered">the development of HATEOAS based services</a>. Interesting...</li>
<li>Also, speaking of building (and consuming) resilient services, check out <a href="https://twitter.com/crichardson">Chris Richardson</a>'s fantastic talk from SpringOne2GX 2013 on <a href="https://spring.io/blog/2014/04/29/springone2gx-2013-replay-futures-and-rx-observables-powerful-abstractions-for-consuming-web-services-asynchronously">powerful abstractions for consuming services asynchronously</a>. </li>
<li>Also, I put together a post talking about <a href="http://www.joshlong.com/jl/blogPost/dont_want_to_use_maven_with_spring.html">getting started with Maven (and alternatives) and Spring</a></li>
</ol></div>
</div>
<section id="disqus_thread"></section>
<script type="text/javascript">
      var disqus_shortname = 'spring-io';
      var disqus_identifier = 1623;

      (function(disqus_shortname, document) {
        injectScript('//' + disqus_shortname + '.disqus.com/embed.js');
        injectScript('//' + disqus_shortname + '.disqus.com/count.js');

        function injectScript(url) {
          var s = document.createElement('script');
          s.async = true;
          s.src = url;
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
        }

      }(disqus_shortname, document));
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a class="dsq-brlink" href="https://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="mobile-only">
<p><a href="/blog">
<i class="icon-chevron-left"></i>
Back
</a></p>
</div>
</article>
<aside class="span4 mobile-right-pane" id="sidebar">
<div>
<ul class="right-pane-widget--container secondary-nav with-icon">
<li class="blog-category">
<div class="icon blog-icon all-posts"></div>
<a href="/blog">All Posts</a>
<a class="pull-right" href="/blog.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category active">
<div class="icon blog-icon engineering"></div>
<a href="/blog/category/engineering">Engineering</a>
<a class="pull-right" href="/blog/category/engineering.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon releases"></div>
<a href="/blog/category/releases">Releases</a>
<a class="pull-right" href="/blog/category/releases.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon news-and-events"></div>
<a href="/blog/category/news">News and Events</a>
<a class="pull-right" href="/blog/category/news.atom"><i class="icon-rss"></i></a>
</li>
</ul>
<ul class="social-btn--container">
<a class="social-btn twitter" href="https://twitter.com/springcentral"></a>

<a class="social-btn linkedin" href="https://www.linkedin.com/groups/46964"></a>
<a class="social-btn youtube" href="/videos"></a>
</ul>
<div id="blog-sidebar-newsletter">
<p>Get updates from The Spring Team delivered to your inbox</p>
<script src="https://app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_4723"></form>
<script>
        MktoForms2.loadForm("https://app-sj05.marketo.com", "625-IUJ-009", 4723, function(form){
          form.onSuccess(function(values, followUpUrl) {
            form.getFormElem().html("<p>Thank you!</p>");
            return false;
          });
        });
      </script>
</div>
</div>
</aside>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>