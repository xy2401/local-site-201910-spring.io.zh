<!DOCTYPE html>
<html data-code-prettify="" data-mobile-support="" data-search="">
<head>
<title>What&#39;s new in Spring Data MongoDB 1.4 M1</title>
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport" />
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png" />
<link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="/css/main-bc256dba5f9d253d6425441ccfb82576.css" />
<script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script>
<script>
    System.config({baseURL: "/b92013b"});
  </script>
<script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script>
<script>
      System.import('app/main.js')
  </script>
<meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification" />

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-KZM7GF6');</script>

<link href="/css/blog-92993c3ec6808bded45b277c18d7d621.css" rel="stylesheet" type="text/css" />

<meta content="summary" name="twitter:card" />
<meta content="@springcentral" name="twitter:site" />
<meta name="twitter:title" content="What&#39;s new in Spring Data MongoDB 1.4 M1" />
<meta name="twitter:description" content="&lt;p&gt;As the first milestone of the Spring Data release train Codd has now cooled down a little bit, I’d like to highlight some of the new features shipped with the MongoDB module.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#spel-support-for-projections-in-aggregation-framework&quot; class=&quot;anchor&quot; name=&quot;spel-support-for-projections-in-aggregation-framework&quot;&gt;&lt;/a&gt;SpEL support for projections in aggregation framework&lt;/h2&gt;
&lt;p&gt;Sometimes it can be pretty complicated to define arithmetic expressions within MongoDB aggregation framework projections.&lt;/p&gt;
&lt;p&gt;Assume a part of an aggregation for an order is the gross price of it, effectively calculated using the following formula: &lt;code&gt;(netPrice * discountRate + fixedCharge) * taxRate&lt;/code&gt;. With a discount rate of 0.8, a fixed charge of 1.2 and a tax rate of 1.19, the according &lt;code&gt;DBObject&lt;/code&gt; to encode this formula with the MongoDB aggregation framework looks as follows:&lt;/p&gt;
" />
<meta name="twitter:creator" content="@thomasdarimont" />
<meta name="twitter:image:src" content="https://gravatar.com/avatar/014bb231d48031c2974e4f723cc381b2?s=200" />

<meta property="og:title" content="What&#39;s new in Spring Data MongoDB 1.4 M1" />
<meta property="og:image" content="https://gravatar.com/avatar/014bb231d48031c2974e4f723cc381b2?s=200" />
<meta property="og:description" content="&lt;p&gt;As the first milestone of the Spring Data release train Codd has now cooled down a little bit, I’d like to highlight some of the new features shipped with the MongoDB module.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#spel-support-for-projections-in-aggregation-framework&quot; class=&quot;anchor&quot; name=&quot;spel-support-for-projections-in-aggregation-framework&quot;&gt;&lt;/a&gt;SpEL support for projections in aggregation framework&lt;/h2&gt;
&lt;p&gt;Sometimes it can be pretty complicated to define arithmetic expressions within MongoDB aggregation framework projections.&lt;/p&gt;
&lt;p&gt;Assume a part of an aggregation for an order is the gross price of it, effectively calculated using the following formula: &lt;code&gt;(netPrice * discountRate + fixedCharge) * taxRate&lt;/code&gt;. With a discount rate of 0.8, a fixed charge of 1.2 and a tax rate of 1.19, the according &lt;code&gt;DBObject&lt;/code&gt; to encode this formula with the MongoDB aggregation framework looks as follows:&lt;/p&gt;
" />
<meta content="article" property="og:type" />
<meta property="og:article:published_time" content="2013-12-04 14:35:17.101" />
</head>
<body>

<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KZM7GF6" style="display:none;visibility:hidden" width="0"></iframe></noscript>

<script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script>
<div class="viewport">
<header class="navbar header--navbar desktop-only">
<div class="navbar-inner">
<div class="container-fluid">
<div class="spring-logo--container">
<a class="spring-logo" href="/"><span></span></a>
</div>
<ul class="nav pull-right">
<li class="navbar-link">
<a href="/projects">Projects</a>
</li>
<li class="navbar-link">
<a href="/guides">Guides</a>
</li>
<li class="navbar-link active">
<a href="/blog">Blog</a>
</li>
<li class="navbar-link">
<a href="/services">Training & Certification</a>
</li>
<li class="navbar-link nav-search js-nav-search">
<a>
<i class="icon-search navbar-search--icon js-search-input-open"></i>
<span class="search-input-close js-search-input-close">
<i class="icon-remove"></i>
</span>
</a>
</li>
</ul>
</div>
</div>
<div class="search-dropdown--container js-search-dropdown">
<div class="container-fluid">
<div class="search-form--container">
<form action="/search" class="form-inline form-search" method="get">
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value="" />
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
</form>
</div>
</div>
</div>
</header>
<div>
<div class="mobile-navigation--wrapper mobile-only">
<div class="navigation-drawer--container">
<div class="mobile-search--container">
<form action="/search" class="form-inline form-search" method="get">
<button class="search-form--submit" type="submit"><i class="icon-search"></i></button>
<input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value="" />
</form>
</div>
<div class="navigation-item-list">
<div class="navbar-link">
<a href="/">
Home
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/projects">
Projects
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/guides">
Guides
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link active">
<a href="/blog">
Blog
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
<div class="navbar-link">
<a href="/services">
Training & Certification
<i class="icon-chevron-right pull-right"></i>
</a>
</div>
</div>
</div>
<div class="mobile-nav">
<div class="nav-icon js-open-nav-drawer">
<i class="icon-reorder"></i>
</div>
<div class="header-center-icon">
<a href="/">
<div class="icon icon-spring-logo-mobile"></div>
</a>
</div>
</div>
</div>
</div>
<div class="header--container"></div>
<div class="container-fluid"></div>
<div></div>
<div class="container-fluid">
<div class="main-body--wrapper">
<div class="row-fluid blog--wrapper">
<article class="span8 mobile-left-pane" id="content">
<header class="desktop-only">
<div class="blog-category active content--title">
<div>Engineering</div>
</div>
<div class="blog-category content--title">
<div>Releases</div>
</div>
<div class="blog-category content--title">
<div>News and Events</div>
</div>
</header>
<div class="blog--container">
<header>
<h1 class="blog--title">What&#39;s new in Spring Data MongoDB 1.4 M1</h1>
<div class="meta-data--container">
<div class="meta-data--item desktop-only">
<div class="meta-data--icon icon blog-icon engineering"></div>
<a class="category">Engineering</a>
</div>
<div class="meta-data--item">
<img class="meta-data--icon" src="https://gravatar.com/avatar/014bb231d48031c2974e4f723cc381b2?s=20&amp;d=mm" />
<span class="author">Thomas Darimont</span>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon calendar"></div>
<time class="date" pubdate="" datetime="2013-12-04 14:35:17.101">December 04, 2013</time>
</div>
<div class="meta-data--item">
<div class="meta-data--icon icon blog-icon comments"></div>
<a class="comments" data-disqus-identifier="1289" href="/blog/2013/12/04/what-s-new-in-spring-data-mongodb-1-4-m1#disqus_thread">
</a></div>
</div>
</header>
<div class="blog--post"><p>As the first milestone of the Spring Data release train Codd has now cooled down a little bit, I&rsquo;d like to highlight some of the new features shipped with the MongoDB module.</p><h2><a href="#spel-support-for-projections-in-aggregation-framework" class="anchor" name="spel-support-for-projections-in-aggregation-framework"></a>SpEL support for projections in aggregation framework</h2><p>Sometimes it can be pretty complicated to define arithmetic expressions within MongoDB aggregation framework projections.</p><p>Assume a part of an aggregation for an order is the gross price of it, effectively calculated using the following formula: <code>(netPrice * discountRate + fixedCharge) * taxRate</code>. With a discount rate of 0.8, a fixed charge of 1.2 and a tax rate of 1.19, the according <code>DBObject</code> to encode this formula with the MongoDB aggregation framework looks as follows:</p>
<pre><code class="prettyprint javascript">{ &quot;aggregate&quot;: &quot;product&quot;,
  &quot;pipeline&quot;: [
    { &quot;$project&quot;: {
        &quot;name&quot;: 1,
        &quot;netPrice&quot;: 1,
        &quot;grossPrice&quot;: {
          &quot;$multiply&quot;: [ 
            { &quot;$add&quot;: [ { &quot;$multiply&quot; : [ &quot;$netPrice&quot;, 0.8 ] }, 1.2 ] }, 1.19
          ]
        }
      }
    }
  ]
}
</code></pre><p>With our new support for transforming SpEL expressions in appropriate MongoDB projection expressions this gets a lot easier, as you can effectively use the source formula as is:</p>
<pre><code class="prettyprint java">import static org.springframework.data.mongodb.core.aggregation.Aggregation.*;
 
double discountRate = 0.8;
double fixedCharge = 1.2;
double taxRate = 1.19;
 
TypedAggregation&lt;Product&gt; agg = newAggregation(Product.class,
  project(&quot;name&quot;, &quot;netPrice&quot;)
    .andExpression(&quot;(netPrice * [0]  + [1]) * [2]&quot;, 
      discountRate, fixedCharge, taxRate)
    .as(&quot;grossPrice&quot;)
);
 
AggregationResults&lt;DBObject&gt; result = mongoTemplate.aggregate(agg, DBObject.class);
List&lt;DBObject&gt; resultList = result.getMappedResults();
</code></pre><p>Under the covers we transform the parsed AST (Abstract Syntax Tree) of the SpEL expression into an appropriate MongoDB aggregation framework expression. Note that we referred to the previously declared variables by using the array index operator which refers to the varargs Object array, the <code>….andExpression(…)</code> takes as second parameter. You can find additional usage examples in the <a href="https://github.com/spring-projects/spring-data-mongodb/blob/1.4.0.M1/spring-data-mongodb/src/test/java/org/springframework/data/mongodb/core/aggregation/SpelExpressionTransformerUnitTests.java">unit tests</a> for <code>SpelExpressionTransformer</code>.</p><h2><a href="#auditing-configuration-with-java-config" class="anchor" name="auditing-configuration-with-java-config"></a>Auditing configuration with Java Config</h2><p>In this release we conquered the last feature of Spring Data modules that strictly required XML configuration - auditing.<br />If you want to use auditing in your application all you have to do now is to use the new <code>@EnableMongoAuditing</code> annotation (or the equivalent for JPA respectively):</p>
<pre><code class="prettyprint java">@Configuration
@EnableMongoAuditing
@EnableMongoRepositories
class Config {
 
  @Bean
  public MongoOperations mongoTemplate() throws Exception {
    MongoClient client = new MongoClient();
    return new MongoTemplate(new SimpleMongoDbFactory(client, &quot;database&quot;));
  }

  @Bean
  public MongoMappingContext mappingContext() {
    return new MongoMappingContext();
  }

  @Bean
  public AuditorAware&lt;BusinessEntity&gt; auditorProvider() {
    return new MongoAuditorProvider&lt;BusinessEntity&gt;();
  }
}
</code></pre><p>The infrastructure enabled through <code>@EnableMongoAuditing</code> will automatically pick up an <code>AuditorAware</code> instance available in the <code>ApplicationContext</code>. If you only want to get creation and modification dates set on your entities, there&rsquo;s no need to declare an <code>AuditorAware</code> bean.</p><h2><a href="#redefine-behavior-of-crud-methods" class="anchor" name="redefine-behavior-of-crud-methods"></a>Redefine behavior of CRUD Methods</h2><p>Methods defined in <code>CrudRepository</code> are usually implemented by a store-specific class that provides the necessary behavior. However, you might want to override the execution of these methods by simple query executions. You can now annotate any of the CRUD methods with a <code>@Query</code> annotation to define the query expression that should be executed. For a MongoDB based repository this looks as follows:</p>
<pre><code class="prettyprint java">interface PersonRepository extends MongoRepository&lt;Person, String&gt; {

  @Query(&quot;{ &#39;username&#39; : { $nin : [ &#39;admin&#39; ] }}&quot;)
  List&lt;Person&gt; findAll();
}
</code></pre><p>This mechanism is available for all modules supporting the repository abstraction.</p><h2><a href="#support-for-lazy-dbrefs" class="anchor" name="support-for-lazy-dbrefs"></a>Support for lazy DBRefs</h2><p>So far, properties of your domain model that were bound to MongoDB DBRefs were loaded eagerly, which caused some trouble if you had a bi-directional DBRef relationship between entities. You can now set a <code>lazy</code> attribute on a <code>@DBRef</code> annotation to declare a field to be resolved lazily. If we detect such a field when loading a document, we generate a proxy for the given object and resolve it when any method of the object is called (expect methods from <code>java.lang.Object</code>).</p>
<pre><code class="prettyprint java">class User{
    
  @DBRef(lazy = true) List&lt;User&gt; fans;
  // …
}
</code></pre><h2><a href="#conclusion" class="anchor" name="conclusion"></a>Conclusion</h2><p>This concludes this brief overview of some of the new features in the latest Codd release but there is a lot more to discover as you can see in our <a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Codd">curated changelog</a>.</p><p>Please see the <a href="https://github.com/spring-projects/spring-data-mongodb">Spring Data MongoDB project page</a> for more information and links for downloads, documentation etc.<br />We would appreciate users giving this milestone a spin.</p></div>
</div>
<section id="disqus_thread"></section>
<script type="text/javascript">
      var disqus_shortname = 'spring-io';
      var disqus_identifier = 1289;

      (function(disqus_shortname, document) {
        injectScript('//' + disqus_shortname + '.disqus.com/embed.js');
        injectScript('//' + disqus_shortname + '.disqus.com/count.js');

        function injectScript(url) {
          var s = document.createElement('script');
          s.async = true;
          s.src = url;
          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
        }

      }(disqus_shortname, document));
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a class="dsq-brlink" href="https://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="mobile-only">
<p><a href="/blog">
<i class="icon-chevron-left"></i>
Back
</a></p>
</div>
</article>
<aside class="span4 mobile-right-pane" id="sidebar">
<div>
<ul class="right-pane-widget--container secondary-nav with-icon">
<li class="blog-category">
<div class="icon blog-icon all-posts"></div>
<a href="/blog">All Posts</a>
<a class="pull-right" href="/blog.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category active">
<div class="icon blog-icon engineering"></div>
<a href="/blog/category/engineering">Engineering</a>
<a class="pull-right" href="/blog/category/engineering.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon releases"></div>
<a href="/blog/category/releases">Releases</a>
<a class="pull-right" href="/blog/category/releases.atom"><i class="icon-rss"></i></a>
</li>
<li class="blog-category">
<div class="icon blog-icon news-and-events"></div>
<a href="/blog/category/news">News and Events</a>
<a class="pull-right" href="/blog/category/news.atom"><i class="icon-rss"></i></a>
</li>
</ul>
<ul class="social-btn--container">
<a class="social-btn twitter" href="https://twitter.com/springcentral"></a>

<a class="social-btn linkedin" href="https://www.linkedin.com/groups/46964"></a>
<a class="social-btn youtube" href="/videos"></a>
</ul>
<div id="blog-sidebar-newsletter">
<p>Get updates from The Spring Team delivered to your inbox</p>
<script src="https://app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
<form id="mktoForm_4723"></form>
<script>
        MktoForms2.loadForm("https://app-sj05.marketo.com", "625-IUJ-009", 4723, function(form){
          form.onSuccess(function(values, followUpUrl) {
            form.getFormElem().html("<p>Thank you!</p>");
            return false;
          });
        });
      </script>
</div>
</div>
</aside>
</div>
</div>
</div>
<footer class="footer">
<div class="container-fluid">
<div class="row-fluid">
<div class="span12">
<div class="navbar">
<div class="container">
<ul class="nav">
<li><a href="/team">Team</a></li>
<li><a href="/tools">Tools</a></li>
<li><a href="https://store.pivotal.io/">Store</a></li>
<li><a href="/blog">Newsletter</a></li>
</ul>
</div>
</div>
&copy; <span>2019</span> <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved.
<a href="https://pivotal.io/terms-of-use">Terms of Use</a> &bullet;
<a href="https://pivotal.io/privacy-policy">Privacy</a> &bullet;
<a href="/trademarks">Trademark Guidelines</a>
<div id="teconsent" style="display:inline-block;"></div>
</div>
</div>
</div>
</footer>
<div id="scrim"></div>
</div>
</body></html>